openapi: 3.0.0
paths:
  /v2/request-tech:
    post:
      description: |-
        Create a new webhook endpoint for receiving notifications

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: RequestTechController_createWebhook_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: Webhook URL
              required:
                - url
              example:
                url: https://example.com/webhook
      responses:
        '201':
          description: Webhook created successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Webhook ID
                    example: 01JMMA4WWFT0VAPBAS0GYH70GQ
                  secret:
                    type: string
                    description: '[Webhook signing secret](https://docs.request.network/request-network-api/api-portal-manage-api-keys-and-webhooks#webhook-management)'
                    example: 9f8688812f6abb01ee7a36934ab10cabab4498a24d2dc080f900ced57617713c
        '400':
          description: Webhook already exists
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Create webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Request Tech
    get:
      description: |-
        Get all webhooks for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: RequestTechController_getWebhooks_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: List of webhooks
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: List of webhooks
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Webhook ID
                      example: 01JMMA4WWFT0VAPBAS0GYH70GQ
                    url:
                      type: string
                      description: Webhook URL
                      example: https://example.com/webhook
                    secret:
                      type: string
                      description: '[Webhook signing secret](https://docs.request.network/request-network-api/api-portal-manage-api-keys-and-webhooks#webhook-management)'
                      example: 9f8688812f6abb01ee7a36934ab10cabab4498a24d2dc080f900ced57617713c
                    isActive:
                      type: boolean
                      default: true
                    createdAt:
                      type: string
                      format: date-time
                      example: '2025-02-17T10:50:19.497Z'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: List webhooks (Requires Session)
      tags:
        - Webhooks
        - V2/Request Tech
  /v2/request-tech/{webhookId}:
    put:
      description: |-
        Enable or disable a webhook

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: RequestTechController_toggleWebhook_v2
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            example: 01JMMA4WWFT0VAPBAS0GYH70GQ
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Webhook toggled successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Toggle webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Request Tech
    delete:
      description: |-
        Permanently delete a webhook

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: RequestTechController_deleteWebhook_v2
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            example: 01JMMA4WWFT0VAPBAS0GYH70GQ
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Webhook deleted successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Delete webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Request Tech
  /v2/request-tech/test:
    post:
      description: |-
        Send a test webhook event to all active webhook endpoints for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: RequestTechController_testWebhook_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventType:
                  type: string
                  enum:
                    - payment.processing
                    - payment.failed
                    - payment.refunded
                    - payment.confirmed
                    - payment.partial
                    - request.recurring
                    - payment_detail.updated
                    - compliance.updated
                  description: Type of webhook event to test
              required:
                - eventType
              example:
                eventType: payment.confirmed
      responses:
        '201':
          description: Test webhook sent successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema: {}
        '400':
          description: Invalid event type
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              examples:
                invalidEventType:
                  summary: Invalid event type
                  value:
                    statusCode: 400
                    message:
                      - code: invalid_enum_value
                        options:
                          - payment.processing
                          - payment.failed
                          - payment.refunded
                          - payment.confirmed
                          - payment.partial
                          - request.recurring
                          - payment_detail.updated
                          - compliance.updated
                        path:
                          - eventType
                        message: Invalid enum value. Expected 'payment.processing' | 'payment.failed' | 'payment.refunded' | 'payment.confirmed' | 'payment.partial' | 'request.recurring' | 'payment_detail.updated' | 'compliance.updated', received 'invalid.event'
                    error: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: No active webhooks found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Test webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Request Tech
  /v1/webhook:
    post:
      description: |-
        Create a new webhook endpoint for receiving notifications

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV1Controller_createWebhook_v1
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: Webhook URL
              required:
                - url
              example:
                url: https://example.com/webhook
      responses:
        '201':
          description: Webhook created successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Webhook ID
                    example: 01JMMA4WWFT0VAPBAS0GYH70GQ
                  secret:
                    type: string
                    description: '[Webhook signing secret](https://docs.request.network/request-network-api/api-portal-manage-api-keys-and-webhooks#webhook-management)'
                    example: 9f8688812f6abb01ee7a36934ab10cabab4498a24d2dc080f900ced57617713c
        '400':
          description: Webhook already exists
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Create webhook (Requires Session)
      tags:
        - Webhooks
        - V1/Webhooks
    get:
      description: |-
        Get all webhooks for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV1Controller_getWebhooks_v1
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: List of webhooks
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: List of webhooks
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Webhook ID
                      example: 01JMMA4WWFT0VAPBAS0GYH70GQ
                    url:
                      type: string
                      description: Webhook URL
                      example: https://example.com/webhook
                    secret:
                      type: string
                      description: '[Webhook signing secret](https://docs.request.network/request-network-api/api-portal-manage-api-keys-and-webhooks#webhook-management)'
                      example: 9f8688812f6abb01ee7a36934ab10cabab4498a24d2dc080f900ced57617713c
                    isActive:
                      type: boolean
                      default: true
                    createdAt:
                      type: string
                      format: date-time
                      example: '2025-02-17T10:50:19.497Z'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: List webhooks (Requires Session)
      tags:
        - Webhooks
        - V1/Webhooks
  /v1/webhook/{webhookId}:
    put:
      description: |-
        Enable or disable a webhook

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV1Controller_toggleWebhook_v1
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            example: 01JMMA4WWFT0VAPBAS0GYH70GQ
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Webhook toggled successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Toggle webhook (Requires Session)
      tags:
        - Webhooks
        - V1/Webhooks
    delete:
      description: |-
        Permanently delete a webhook

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV1Controller_deleteWebhook_v1
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            example: 01JMMA4WWFT0VAPBAS0GYH70GQ
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Webhook deleted successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Delete webhook (Requires Session)
      tags:
        - Webhooks
        - V1/Webhooks
  /v1/webhook/test:
    post:
      description: |-
        Send a test webhook event to all active webhook endpoints for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV1Controller_testWebhook_v1
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventType:
                  type: string
                  enum:
                    - payment.processing
                    - payment.failed
                    - payment.refunded
                    - payment.confirmed
                    - payment.partial
                    - request.recurring
                    - payment_detail.updated
                    - compliance.updated
                  description: Type of webhook event to test
              required:
                - eventType
              example:
                eventType: payment.confirmed
      responses:
        '201':
          description: Test webhook sent successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema: {}
        '400':
          description: Invalid event type
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              examples:
                invalidEventType:
                  summary: Invalid event type
                  value:
                    statusCode: 400
                    message:
                      - code: invalid_enum_value
                        options:
                          - payment.processing
                          - payment.failed
                          - payment.refunded
                          - payment.confirmed
                          - payment.partial
                          - request.recurring
                          - payment_detail.updated
                          - compliance.updated
                        path:
                          - eventType
                        message: Invalid enum value. Expected 'payment.processing' | 'payment.failed' | 'payment.refunded' | 'payment.confirmed' | 'payment.partial' | 'request.recurring' | 'payment_detail.updated' | 'compliance.updated', received 'invalid.event'
                    error: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: No active webhooks found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Test webhook (Requires Session)
      tags:
        - Webhooks
        - V1/Webhooks
  /v2/webhook:
    post:
      description: |-
        Create a new webhook endpoint for receiving notifications

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV2Controller_createWebhook_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: Webhook URL
              required:
                - url
              example:
                url: https://example.com/webhook
      responses:
        '201':
          description: Webhook created successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Webhook ID
                    example: 01JMMA4WWFT0VAPBAS0GYH70GQ
                  secret:
                    type: string
                    description: '[Webhook signing secret](https://docs.request.network/request-network-api/api-portal-manage-api-keys-and-webhooks#webhook-management)'
                    example: 9f8688812f6abb01ee7a36934ab10cabab4498a24d2dc080f900ced57617713c
        '400':
          description: Webhook already exists
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Create webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Webhooks
    get:
      description: |-
        Get all webhooks for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV2Controller_getWebhooks_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: List of webhooks
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: List of webhooks
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Webhook ID
                      example: 01JMMA4WWFT0VAPBAS0GYH70GQ
                    url:
                      type: string
                      description: Webhook URL
                      example: https://example.com/webhook
                    secret:
                      type: string
                      description: '[Webhook signing secret](https://docs.request.network/request-network-api/api-portal-manage-api-keys-and-webhooks#webhook-management)'
                      example: 9f8688812f6abb01ee7a36934ab10cabab4498a24d2dc080f900ced57617713c
                    isActive:
                      type: boolean
                      default: true
                    createdAt:
                      type: string
                      format: date-time
                      example: '2025-02-17T10:50:19.497Z'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: List webhooks (Requires Session)
      tags:
        - Webhooks
        - V2/Webhooks
  /v2/webhook/{webhookId}:
    put:
      description: |-
        Enable or disable a webhook

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV2Controller_toggleWebhook_v2
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            example: 01JMMA4WWFT0VAPBAS0GYH70GQ
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Webhook toggled successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Toggle webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Webhooks
    delete:
      description: |-
        Permanently delete a webhook

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV2Controller_deleteWebhook_v2
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            example: 01JMMA4WWFT0VAPBAS0GYH70GQ
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Webhook deleted successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: Webhook not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Delete webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Webhooks
  /v2/webhook/test:
    post:
      description: |-
        Send a test webhook event to all active webhook endpoints for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: WebhookV2Controller_testWebhook_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventType:
                  type: string
                  enum:
                    - payment.processing
                    - payment.failed
                    - payment.refunded
                    - payment.confirmed
                    - payment.partial
                    - request.recurring
                    - payment_detail.updated
                    - compliance.updated
                  description: Type of webhook event to test
              required:
                - eventType
              example:
                eventType: payment.confirmed
      responses:
        '201':
          description: Test webhook sent successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema: {}
        '400':
          description: Invalid event type
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              examples:
                invalidEventType:
                  summary: Invalid event type
                  value:
                    statusCode: 400
                    message:
                      - code: invalid_enum_value
                        options:
                          - payment.processing
                          - payment.failed
                          - payment.refunded
                          - payment.confirmed
                          - payment.partial
                          - request.recurring
                          - payment_detail.updated
                          - compliance.updated
                        path:
                          - eventType
                        message: Invalid enum value. Expected 'payment.processing' | 'payment.failed' | 'payment.refunded' | 'payment.confirmed' | 'payment.partial' | 'request.recurring' | 'payment_detail.updated' | 'compliance.updated', received 'invalid.event'
                    error: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: No active webhooks found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Test webhook (Requires Session)
      tags:
        - Webhooks
        - V2/Webhooks
  /v1/auth/register:
    post:
      description: Register a new user with an email and password
      operationId: AuthV1Controller_register_v1
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Platform email
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                  description: Platform password
              required:
                - email
                - password
      responses:
        '201':
          description: Successfully registered
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '400':
          description: Bad request - validation failed or already logged in
        '429':
          description: Too Many Requests
      summary: Register a new user
      tags:
        - Authentication
        - V1/Authentication
  /v1/auth/login:
    post:
      description: Login with email and password
      operationId: AuthV1Controller_login_v1
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Platform email
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                  description: Platform password
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully logged in
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '400':
          description: Bad request - validation failed or already logged in
        '429':
          description: Too Many Requests
      summary: Login user
      tags:
        - Authentication
        - V1/Authentication
  /v1/auth/logout:
    post:
      description: |-
        Logout and clear session

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: AuthV1Controller_logout_v1
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Successfully logged out
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Logout user (Requires Session)
      tags:
        - Authentication
        - V1/Authentication
  /v2/auth/register:
    post:
      description: Register a new user with an email and password
      operationId: AuthV2Controller_register_v2
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Platform email
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                  description: Platform password
              required:
                - email
                - password
      responses:
        '201':
          description: Successfully registered
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '400':
          description: Bad request - validation failed or already logged in
        '429':
          description: Too Many Requests
      summary: Register a new user
      tags:
        - Authentication
        - V2/Authentication
  /v2/auth/login:
    post:
      description: Login with email and password
      operationId: AuthV2Controller_login_v2
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Platform email
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                  description: Platform password
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully logged in
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '400':
          description: Bad request - validation failed or already logged in
        '429':
          description: Too Many Requests
      summary: Login user
      tags:
        - Authentication
        - V2/Authentication
  /v2/auth/logout:
    post:
      description: |-
        Logout and clear session

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: AuthV2Controller_logout_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Successfully logged out
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Logout user (Requires Session)
      tags:
        - Authentication
        - V2/Authentication
  /v1/currencies:
    get:
      description: Get a list of all available tokens, or filter by network, symbol, or id.
      operationId: CurrenciesV1Controller_getNetworkTokens_v1
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: network
          required: false
          in: query
          description: The network of the token(s)
          schema:
            example: mainnet
            type: string
        - name: symbol
          required: false
          in: query
          description: The symbol of the token
          schema:
            example: USDC
            type: string
        - name: firstOnly
          required: false
          in: query
          description: Whether to return only the first token. can only be used when both `network` and `symbol` are provided.
          schema:
            example: true
            type: string
        - name: id
          required: false
          in: query
          description: The Request Network id of the token
          schema:
            example: USDC-mainnet
            type: string
      responses:
        '200':
          description: List of tokens retrieved successfully
          content:
            application/json:
              examples:
                all:
                  summary: All tokens
                  value:
                    - id: USDC-mainnet
                      name: USD Coin
                      symbol: USDC
                      decimals: 6
                      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      network: mainnet
                      type: ERC20
                      hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      chainId: 1
                    - id: USDT-mainnet
                      name: Tether USD
                      symbol: USDT
                      decimals: 6
                      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                      network: mainnet
                      type: ERC20
                      hash: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                      chainId: 1
                byNetwork:
                  summary: Tokens on mainnet
                  value:
                    - id: USDC-mainnet
                      name: USD Coin
                      symbol: USDC
                      decimals: 6
                      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      network: mainnet
                      type: ERC20
                      hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      chainId: 1
                bySymbolAndNetwork:
                  summary: USDC on mainnet
                  value:
                    - id: USDC-mainnet
                      name: USD Coin
                      symbol: USDC
                      decimals: 6
                      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      network: mainnet
                      type: ERC20
                      hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      chainId: 1
                firstOnly:
                  summary: First match only
                  value:
                    id: USDC-mainnet
                    name: USD Coin
                    symbol: USDC
                    decimals: 6
                    address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    network: mainnet
                    type: ERC20
                    hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    chainId: 1
                byId:
                  summary: By ID
                  value:
                    id: USDC-mainnet
                    name: USD Coin
                    symbol: USDC
                    decimals: 6
                    address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    network: mainnet
                    type: ERC20
                    hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    chainId: 1
        '400':
          description: Validation failed
          content:
            application/json:
              examples:
                invalidFirstOnly:
                  summary: Invalid firstOnly value
                  value:
                    statusCode: 400
                    message:
                      - code: custom
                        message: firstOnly must be 'true' or 'false' if provided
                        path:
                          - firstOnly
                    error: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Token not found
          content:
            application/json:
              examples:
                notFound:
                  summary: Token not found
                  value:
                    statusCode: 404
                    message: Token not found
                    error: Not Found
        '429':
          description: Too Many Requests
      summary: Get currencies
      tags:
        - Currencies
        - V1/Currencies
  /v1/currencies/{currencyId}/conversion-routes:
    get:
      description: Get a list of currency objects (with all details) that can be converted to from the specified currency. Optionally filter by network using the 'network' query parameter.
      operationId: CurrenciesV1Controller_getConversionRoutes_v1
      parameters:
        - name: currencyId
          required: true
          in: path
          schema:
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: network
          required: false
          in: query
          description: The network of the token to filter by
          schema:
            type: string
      responses:
        '200':
          description: Conversion routes retrieved successfully
          content:
            application/json:
              examples:
                usdRoutes:
                  summary: USD conversion routes on mainnet
                  value:
                    currencyId: USD
                    network: mainnet
                    conversionRoutes:
                      - id: USDT-mainnet
                        name: Tether USD
                        symbol: USDT
                        decimals: 6
                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                        network: mainnet
                        type: ERC20
                        hash: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        chainId: 1
                      - id: ETH-mainnet
                        name: Ether
                        symbol: ETH
                        decimals: 18
                        address: '0xf5af88e117747e87fc5929f2ff87221b1447652e'
                        network: mainnet
                        type: ETH
                        hash: '0xf5af88e117747e87fc5929f2ff87221b1447652e'
                        chainId: 1
                allNetworks:
                  summary: All networks conversion routes
                  value:
                    currencyId: USD
                    network: null
                    conversionRoutes:
                      - id: USDT-mainnet
                        name: Tether USD
                        symbol: USDT
                        decimals: 6
                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                        network: mainnet
                        type: ERC20
                        hash: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        chainId: 1
                      - id: FAU-sepolia
                        name: FAU
                        symbol: FAU
                        decimals: 18
                        address: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324Cf623C'
                        network: sepolia
                        type: ERC20
                        hash: '0x370de27fdb7d1ff1e1baa7d11c5820a324cf623c'
                        chainId: 11155111
        '401':
          description: Unauthorized
        '404':
          description: Currency not found
          content:
            application/json:
              examples:
                notFound:
                  summary: Currency not found
                  value:
                    statusCode: 404
                    message: Token not found
                    error: Not Found
        '429':
          description: Too Many Requests
      summary: Get conversion routes for a specific currency
      tags:
        - Currencies
        - V1/Currencies
  /v2/currencies:
    get:
      description: Get a list of all available tokens, or filter by network, symbol, or id.
      operationId: CurrenciesV2Controller_getNetworkTokens_v2
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: network
          required: false
          in: query
          description: The network of the token(s)
          schema:
            example: mainnet
            type: string
        - name: symbol
          required: false
          in: query
          description: The symbol of the token
          schema:
            example: USDC
            type: string
        - name: firstOnly
          required: false
          in: query
          description: Whether to return only the first token. can only be used when both `network` and `symbol` are provided.
          schema:
            example: true
            type: string
        - name: id
          required: false
          in: query
          description: The Request Network id of the token
          schema:
            example: USDC-mainnet
            type: string
      responses:
        '200':
          description: List of tokens retrieved successfully
          content:
            application/json:
              examples:
                all:
                  summary: All tokens
                  value:
                    - id: USDC-mainnet
                      name: USD Coin
                      symbol: USDC
                      decimals: 6
                      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      network: mainnet
                      type: ERC20
                      hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      chainId: 1
                    - id: USDT-mainnet
                      name: Tether USD
                      symbol: USDT
                      decimals: 6
                      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                      network: mainnet
                      type: ERC20
                      hash: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                      chainId: 1
                byNetwork:
                  summary: Tokens on mainnet
                  value:
                    - id: USDC-mainnet
                      name: USD Coin
                      symbol: USDC
                      decimals: 6
                      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      network: mainnet
                      type: ERC20
                      hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      chainId: 1
                bySymbolAndNetwork:
                  summary: USDC on mainnet
                  value:
                    - id: USDC-mainnet
                      name: USD Coin
                      symbol: USDC
                      decimals: 6
                      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      network: mainnet
                      type: ERC20
                      hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                      chainId: 1
                firstOnly:
                  summary: First match only
                  value:
                    id: USDC-mainnet
                    name: USD Coin
                    symbol: USDC
                    decimals: 6
                    address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    network: mainnet
                    type: ERC20
                    hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    chainId: 1
                byId:
                  summary: By ID
                  value:
                    id: USDC-mainnet
                    name: USD Coin
                    symbol: USDC
                    decimals: 6
                    address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    network: mainnet
                    type: ERC20
                    hash: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                    chainId: 1
        '400':
          description: Validation failed
          content:
            application/json:
              examples:
                invalidFirstOnly:
                  summary: Invalid firstOnly value
                  value:
                    statusCode: 400
                    message:
                      - code: custom
                        message: firstOnly must be 'true' or 'false' if provided
                        path:
                          - firstOnly
                    error: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Token not found
          content:
            application/json:
              examples:
                notFound:
                  summary: Token not found
                  value:
                    statusCode: 404
                    message: Token not found
                    error: Not Found
        '429':
          description: Too Many Requests
      summary: Get currencies
      tags:
        - Currencies
        - V2/Currencies
  /v2/currencies/{currencyId}/conversion-routes:
    get:
      description: Get a list of currency objects (with all details) that can be converted to from the specified currency. Optionally filter by network using the 'network' query parameter.
      operationId: CurrenciesV2Controller_getConversionRoutes_v2
      parameters:
        - name: currencyId
          required: true
          in: path
          schema:
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: network
          required: false
          in: query
          description: The network of the token to filter by
          schema:
            type: string
      responses:
        '200':
          description: Conversion routes retrieved successfully
          content:
            application/json:
              examples:
                usdRoutes:
                  summary: USD conversion routes on mainnet
                  value:
                    currencyId: USD
                    network: mainnet
                    conversionRoutes:
                      - id: USDT-mainnet
                        name: Tether USD
                        symbol: USDT
                        decimals: 6
                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                        network: mainnet
                        type: ERC20
                        hash: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        chainId: 1
                      - id: ETH-mainnet
                        name: Ether
                        symbol: ETH
                        decimals: 18
                        address: '0xf5af88e117747e87fc5929f2ff87221b1447652e'
                        network: mainnet
                        type: ETH
                        hash: '0xf5af88e117747e87fc5929f2ff87221b1447652e'
                        chainId: 1
                allNetworks:
                  summary: All networks conversion routes
                  value:
                    currencyId: USD
                    network: null
                    conversionRoutes:
                      - id: USDT-mainnet
                        name: Tether USD
                        symbol: USDT
                        decimals: 6
                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
                        network: mainnet
                        type: ERC20
                        hash: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        chainId: 1
                      - id: FAU-sepolia
                        name: FAU
                        symbol: FAU
                        decimals: 18
                        address: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324Cf623C'
                        network: sepolia
                        type: ERC20
                        hash: '0x370de27fdb7d1ff1e1baa7d11c5820a324cf623c'
                        chainId: 11155111
        '401':
          description: Unauthorized
        '404':
          description: Currency not found
          content:
            application/json:
              examples:
                notFound:
                  summary: Currency not found
                  value:
                    statusCode: 404
                    message: Token not found
                    error: Not Found
        '429':
          description: Too Many Requests
      summary: Get conversion routes for a specific currency
      tags:
        - Currencies
        - V2/Currencies
  /v1/key:
    post:
      description: |-
        Create a new API key for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV1Controller_createAPIKey_v1
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  minLength: 1
                  maxLength: 100
                  description: API key label
                isSandbox:
                  type: boolean
                  description: Whether this API key operates in sandbox mode
              required:
                - label
                - isSandbox
              example:
                label: My API key
                isSandbox: true
      responses:
        '201':
          description: API key created successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: Created API key
                    example: rn_v1_5f7fucpzhyurwuafwljbgfmzmhyyyf4y
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Create API key (Requires Session)
      tags:
        - API Keys
        - V1/API Keys
    get:
      description: |-
        Get all API keys for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV1Controller_getAPIKeys_v1
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: List of API keys
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: List of API keys
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: API key ID
                      example: 01JKZNG0N658N6A2R45MPEEP4F
                    label:
                      type: string
                      description: API key label
                      example: My API key
                    key:
                      type: string
                      description: API key
                      example: rn_v1_5f7fucpzhyurwuafwljbgfmzmhyyyf4y
                    isActive:
                      type: boolean
                      description: API key status
                    createdAt:
                      type: string
                      format: date-time
                      example: '2025-02-13T12:45:45.512Z'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: List API keys (Requires Session)
      tags:
        - API Keys
        - V1/API Keys
  /v1/key/{id}:
    put:
      description: |-
        Enable or disable an API key

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV1Controller_toggleAPIKey_v1
      parameters:
        - name: id
          required: true
          in: path
          description: API key ID
          schema:
            example: 01JKZNG0N658N6A2R45MPEEP4F
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: API key toggled successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: API key not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Toggle API key (Requires Session)
      tags:
        - API Keys
        - V1/API Keys
    delete:
      description: |-
        Permanently delete an API key

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV1Controller_deleteAPIKey_v1
      parameters:
        - name: id
          required: true
          in: path
          description: API key ID
          schema:
            example: 01JKZNG0N658N6A2R45MPEEP4F
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: API key deleted successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: API key not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Delete API key (Requires Session)
      tags:
        - API Keys
        - V1/API Keys
  /v2/key:
    post:
      description: |-
        Create a new API key for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV2Controller_createAPIKey_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  minLength: 1
                  maxLength: 100
                  description: API key label
                isSandbox:
                  type: boolean
                  description: Whether this API key operates in sandbox mode
              required:
                - label
                - isSandbox
              example:
                label: My API key
                isSandbox: true
      responses:
        '201':
          description: API key created successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
                    description: Created API key
                    example: rn_v1_5f7fucpzhyurwuafwljbgfmzmhyyyf4y
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Create API key (Requires Session)
      tags:
        - API Keys
        - V2/API Keys
    get:
      description: |-
        Get all API keys for your platform

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV2Controller_getAPIKeys_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: List of API keys
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                description: List of API keys
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: API key ID
                      example: 01JKZNG0N658N6A2R45MPEEP4F
                    label:
                      type: string
                      description: API key label
                      example: My API key
                    key:
                      type: string
                      description: API key
                      example: rn_v1_5f7fucpzhyurwuafwljbgfmzmhyyyf4y
                    isActive:
                      type: boolean
                      description: API key status
                    createdAt:
                      type: string
                      format: date-time
                      example: '2025-02-13T12:45:45.512Z'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: List API keys (Requires Session)
      tags:
        - API Keys
        - V2/API Keys
  /v2/key/{id}:
    put:
      description: |-
        Enable or disable an API key

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV2Controller_toggleAPIKey_v2
      parameters:
        - name: id
          required: true
          in: path
          description: API key ID
          schema:
            example: 01JKZNG0N658N6A2R45MPEEP4F
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: API key toggled successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: API key not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Toggle API key (Requires Session)
      tags:
        - API Keys
        - V2/API Keys
    delete:
      description: |-
        Permanently delete an API key

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: APIKeyV2Controller_deleteAPIKey_v2
      parameters:
        - name: id
          required: true
          in: path
          description: API key ID
          schema:
            example: 01JKZNG0N658N6A2R45MPEEP4F
            type: string
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: API key deleted successfully
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '401':
          description: Unauthorized
        '404':
          description: API key not found
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Delete API key (Requires Session)
      tags:
        - API Keys
        - V2/API Keys
  /v1/request:
    post:
      description: Create a new payment request
      operationId: RequestControllerV1_createRequest_v1
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payer:
                  type: string
                  description: The wallet address of the payer
                payee:
                  type: string
                  description: The wallet address of the payee
                amount:
                  type: string
                  description: The payable amount of the invoice, in human readable format
                invoiceCurrency:
                  type: string
                  description: 'Invoice Currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: USD'
                paymentCurrency:
                  type: string
                  description: 'Payment currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: ETH-sepolia-sepolia'
                recurrence:
                  type: object
                  properties:
                    startDate:
                      type:
                        - string
                        - 'null'
                      description: The start date of the invoice
                    frequency:
                      type: string
                      enum:
                        - DAILY
                        - WEEKLY
                        - MONTHLY
                        - YEARLY
                      description: The frequency of the invoice
                  required:
                    - startDate
                    - frequency
                  description: The recurrence of the invoice
              required:
                - payee
                - amount
                - invoiceCurrency
                - paymentCurrency
              example:
                payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                amount: '10'
                invoiceCurrency: USD
                paymentCurrency: ETH-sepolia-sepolia
                recurrence:
                  startDate: 2025-01-01T00:00:00.000Z
                  frequency: DAILY
      responses:
        '201':
          description: Request created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentReference:
                    type: string
                    description: Unique identifier of the request, used to pay the request as well as check the status of the request
                    example: '0xb3581f0b0f74cc61'
                  requestID:
                    type: string
                    description: Unique identifier of the request, commonly used to look up a request in Request Scan
                    example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
        '400':
          description: Validation failed
        '401':
          description: Unauthorized
        '404':
          description: Wallet not found
        '429':
          description: Too Many Requests
      summary: Create a new request
      tags:
        - Request
        - V1/Request
  /v1/request/{paymentReference}:
    get:
      description: Get the status of a payment request
      operationId: RequestControllerV1_getRequestStatus_v1
      parameters:
        - name: paymentReference
          required: true
          in: path
          description: The payment reference of the request
          schema:
            example: '0xb3581f0b0f74cc61'
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasBeenPaid:
                    type: boolean
                    description: Whether the request has been paid or not
                  paymentReference:
                    type: string
                    example: '0xb3581f0b0f74cc61'
                    description: The payment reference of the request
                  requestId:
                    type: string
                    description: The request ID of the request
                    example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                  isListening:
                    type: boolean
                    description: Whether the request is listening for a payment
                  txHash:
                    type: string
                    nullable: true
                    description: The transaction hash of the payment
              examples:
                paid:
                  summary: Request has been paid
                  value:
                    hasBeenPaid: true
                    paymentReference: '0xb3581f0b0f74cc61'
                    requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    isListening: false
                    txHash: '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
                notPaid:
                  summary: Request has not been paid
                  value:
                    hasBeenPaid: false
                    paymentReference: '0xb3581f0b0f74cc61'
                    requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    isListening: false
                    txHash: null
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Get request status
      tags:
        - Request
        - V1/Request
  /v1/request/{paymentReference}/stop-recurrence:
    patch:
      description: Stop a recurring request
      operationId: RequestControllerV1_stopRecurrenceRequest_v1
      parameters:
        - name: paymentReference
          required: true
          in: path
          description: The payment reference of the request
          schema:
            example: '0xb3581f0b0f74cc61'
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recurrence stopped successfully
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Stop a recurring request
      tags:
        - Request
        - V1/Request
  /v1/request/{paymentReference}/pay:
    get:
      description: 'Get the calldata needed to pay a request. For same-chain payments, returns transaction calldata that can be directly executed. For crosschain payments (when chain and token parameters are provided and differ from the request''s native chain), returns a payment intent that needs to be signed and processed through the crosschain bridge. Note: Crosschain requests with an expectedAmount less than 1 are rejected.'
      operationId: RequestControllerV1_getPaymentCalldata_v1
      parameters:
        - name: paymentReference
          required: true
          in: path
          description: The payment reference of the request
          schema:
            example: '0xb3581f0b0f74cc61'
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: wallet
          required: false
          in: query
          description: The wallet address of the payer.
          schema:
            example: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
            type: string
        - name: chain
          required: false
          in: query
          description: The source chain of the crosschain payment
          x-feature-flag: crosschainDisabled
          schema:
            enum:
              - BASE
              - OPTIMISM
              - ARBITRUM
              - ETHEREUM
            type: string
        - name: token
          required: false
          in: query
          description: The source token of the crosschain payment
          x-feature-flag: crosschainDisabled
          schema:
            enum:
              - USDC
              - USDT
              - DAI
            type: string
        - name: amount
          required: false
          in: query
          description: The amount to pay, in human readable format
          schema:
            type: string
      responses:
        '200':
          description: Payment calldata retrieved successfully
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    title: Same-chain Payment Response
                    description: Response for same-chain payments with transaction calldata
                    properties:
                      transactions:
                        type: array
                        description: Array of transactions to execute for the payment
                        items:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Transaction calldata
                            to:
                              type: string
                              description: Target contract address
                            value:
                              type: object
                              description: Payment amount in EVM-compatible format
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - BigNumber
                                hex:
                                  type: string
                                  description: Amount encoded in hex
                          required:
                            - data
                            - to
                            - value
                      metadata:
                        type: object
                        description: Metadata about the payment requirements
                        properties:
                          stepsRequired:
                            type: number
                            description: Number of transactions required
                          needsApproval:
                            type: boolean
                            description: Whether token approval is needed
                          approvalTransactionIndex:
                            type: number
                            nullable: true
                            description: Index of the approval transaction if needed
                          hasEnoughBalance:
                            type: boolean
                            description: Whether payer has sufficient balance
                          hasEnoughGas:
                            type: boolean
                            description: Whether payer has sufficient gas
                        required:
                          - stepsRequired
                          - needsApproval
                          - hasEnoughBalance
                          - hasEnoughGas
                    required:
                      - transactions
                      - metadata
                  - type: object
                    title: Crosschain Payment Response
                    description: Response for crosschain payments with payment intent to be signed
                    properties:
                      paymentIntentId:
                        type: string
                        description: Unique identifier for the payment intent
                      paymentIntent:
                        type: string
                        description: EIP-712 typed data for payment intent signature
                      approvalPermitPayload:
                        type: string
                        nullable: true
                        description: EIP-712 typed data for token approval permit (for EIP-2612 compliant tokens)
                      approvalCalldata:
                        type: object
                        nullable: true
                        description: Transaction calldata for token approval (for non-EIP-2612 tokens)
                        properties:
                          to:
                            type: string
                            description: Token contract address
                          data:
                            type: string
                            description: Approval transaction calldata
                          value:
                            type: string
                            description: Transaction value (usually '0x0')
                      metadata:
                        type: object
                        description: Metadata about the crosschain payment
                        properties:
                          supportsEIP2612:
                            type: boolean
                            description: Whether the token supports EIP-2612 permits
                        required:
                          - supportsEIP2612
                    required:
                      - paymentIntentId
                      - paymentIntent
                      - metadata
              examples:
                native:
                  summary: Native currency payment
                  value:
                    transactions:
                      - data: 0xb868980b...00
                        to: '0x11BF2fDA23bF0A98365e1A4e04A87C9339e8687'
                        value:
                          type: BigNumber
                          hex: '0x038d7ea4c68000'
                    metadata:
                      stepsRequired: 1
                      needsApproval: false
                      approvalTransactionIndex: null
                      hasEnoughBalance: true
                      hasEnoughGas: true
                token:
                  summary: ERC20 token payment
                  value:
                    transactions:
                      - data: 0x095ea7b3...ff
                        to: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324cf623C'
                        value: 0
                      - data: 0xc219a14d...00
                        to: '0x399F5EE127ce7432E4921a61b8CF52b0af52cbfE'
                        value: 0
                    metadata:
                      stepsRequired: 2
                      needsApproval: true
                      approvalTransactionIndex: 0
                      hasEnoughBalance: true
                      hasEnoughGas: true
                currencyThatSupportsEIP2612:
                  summary: Crosschain payment with a currency that supports EIP-2612
                  x-feature-flag: crosschainDisabled
                  value:
                    paymentIntentId: 01JPHNEY8RRJTB94Q34GAW8BC3
                    paymentIntent: |-
                      {
                        "domain": {
                          "name": "Permit2",
                          "chainId": 42161,
                          "verifyingContract": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                        },
                        "types": {
                          "PermitBatchWitnessTransferFrom": [
                            {
                              "name": "permitted",
                              "type": "TokenPermissions[]"
                            },
                            {
                              "name": "spender",
                              "type": "address"
                            },
                            {
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "name": "deadline",
                              "type": "uint256"
                            },
                            {
                              "name": "witness",
                              "type": "PaymentIntent"
                            }
                          ],
                          "TokenPermissions": [
                            {
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "PaymentIntent": [
                            {
                              "name": "payment_type",
                              "type": "uint8"
                            },
                            {
                              "name": "operator_data",
                              "type": "OperatorData"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            },
                            {
                              "name": "source",
                              "type": "Domain"
                            },
                            {
                              "name": "destination",
                              "type": "Domain"
                            },
                            {
                              "name": "processing_date",
                              "type": "uint256"
                            },
                            {
                              "name": "expires_at",
                              "type": "uint256"
                            }
                          ],
                          "OperatorData": [
                            {
                              "name": "operatorId",
                              "type": "bytes32"
                            },
                            {
                              "name": "operator",
                              "type": "address"
                            },
                            {
                              "name": "treasury_account",
                              "type": "address"
                            },
                            {
                              "name": "fee",
                              "type": "uint256"
                            }
                          ],
                          "Domain": [
                            {
                              "name": "account",
                              "type": "address"
                            },
                            {
                              "name": "network_id",
                              "type": "uint256"
                            },
                            {
                              "name": "payment_token",
                              "type": "address"
                            }
                          ]
                        },
                        "values": {
                          "permitted": [
                            {
                              "token": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
                              "amount": "1998000"
                            },
                            {
                              "token": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
                              "amount": "0"
                            },
                            {
                              "token": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
                              "amount": "2000"
                            }
                          ],
                          "spender": "0x4B1d5b0aF5AbAe333C8d2CCa2a346e0D5f68C427",
                          "nonce": "1742202173708",
                          "deadline": "1742205771",
                          "witness": {
                            "payment_type": 0,
                            "operator_data": {
                              "operatorId": "0x6ab1463ead4ba60b8e08155b29ea2b3c91731e78be09b6e12b6c25414d724dd0",
                              "operator": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "treasury_account": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "fee": "0"
                            },
                            "amount": "2000000",
                            "source": {
                              "account": "0xb07D2398d2004378cad234DA0EF14f1c94A530e4",
                              "network_id": "42161",
                              "payment_token": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"
                            },
                            "destination": {
                              "account": "0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7",
                              "network_id": "8453",
                              "payment_token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                            },
                            "processing_date": "1742220173",
                            "expires_at": "1742205771"
                          }
                        }
                      }
                    approvalPermitPayload: |-
                      {
                        "domain": {
                          "name": "USD Coin",
                          "version": "2",
                          "chainId": 42161,
                          "verifyingContract": "0xaf88d065e77c8cc2239327c5edb3a432268e5831"
                        },
                        "types": {
                          "Permit": [
                            {
                              "name": "owner",
                              "type": "address"
                            },
                            {
                              "name": "spender",
                              "type": "address"
                            },
                            {
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "name": "deadline",
                              "type": "uint256"
                            }
                          ]
                        },
                        "values": {
                          "owner": "0xb07D2398d2004378cad234DA0EF14f1c94A530e4",
                          "spender": "0x000000000022D473030F116dDEE9F6B43aC78BA3",
                          "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                          "nonce": "1",
                          "deadline": 1742205771
                        }
                      }
                    metadata:
                      supportsEIP2612: true
                currencyThatDoesNotSupportEIP2612:
                  summary: Crosschain payment with a currency that does not support EIP-2612
                  x-feature-flag: crosschainDisabled
                  value:
                    paymentIntentId: 01JPHNFMRC2JFG4W08FGDG4KD3
                    paymentIntent: |-
                      {
                        "domain": {
                          "name": "Permit2",
                          "chainId": 42161,
                          "verifyingContract": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                        },
                        "types": {
                          "PermitBatchWitnessTransferFrom": [
                            {
                              "name": "permitted",
                              "type": "TokenPermissions[]"
                            },
                            {
                              "name": "spender",
                              "type": "address"
                            },
                            {
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "name": "deadline",
                              "type": "uint256"
                            },
                            {
                              "name": "witness",
                              "type": "PaymentIntent"
                            }
                          ],
                          "TokenPermissions": [
                            {
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "PaymentIntent": [
                            {
                              "name": "payment_type",
                              "type": "uint8"
                            },
                            {
                              "name": "operator_data",
                              "type": "OperatorData"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            },
                            {
                              "name": "source",
                              "type": "Domain"
                            },
                            {
                              "name": "destination",
                              "type": "Domain"
                            },
                            {
                              "name": "processing_date",
                              "type": "uint256"
                            },
                            {
                              "name": "expires_at",
                              "type": "uint256"
                            }
                          ],
                          "OperatorData": [
                            {
                              "name": "operatorId",
                              "type": "bytes32"
                            },
                            {
                              "name": "operator",
                              "type": "address"
                            },
                            {
                              "name": "treasury_account",
                              "type": "address"
                            },
                            {
                              "name": "fee",
                              "type": "uint256"
                            }
                          ],
                          "Domain": [
                            {
                              "name": "account",
                              "type": "address"
                            },
                            {
                              "name": "network_id",
                              "type": "uint256"
                            },
                            {
                              "name": "payment_token",
                              "type": "address"
                            }
                          ]
                        },
                        "values": {
                          "permitted": [
                            {
                              "token": "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
                              "amount": "1998000"
                            },
                            {
                              "token": "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
                              "amount": "0"
                            },
                            {
                              "token": "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
                              "amount": "2000"
                            }
                          ],
                          "spender": "0x4B1d5b0aF5AbAe333C8d2CCa2a346e0D5f68C427",
                          "nonce": "1742202196746",
                          "deadline": "1742205796",
                          "witness": {
                            "payment_type": 0,
                            "operator_data": {
                              "operatorId": "0x6ab1463ead4ba60b8e08155b29ea2b3c91731e78be09b6e12b6c25414d724dd0",
                              "operator": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "treasury_account": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "fee": "0"
                            },
                            "amount": "2000000",
                            "source": {
                              "account": "0xb07D2398d2004378cad234DA0EF14f1c94A530e4",
                              "network_id": "42161",
                              "payment_token": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"
                            },
                            "destination": {
                              "account": "0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7",
                              "network_id": "8453",
                              "payment_token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                            },
                            "processing_date": "1742220196",
                            "expires_at": "1742205796"
                          }
                        }
                      }
                    approvalCalldata:
                      to: '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9'
                      data: '0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'
                      value: '0x0'
                    metadata:
                      supportsEIP2612: false
        '400':
          description: Validation failed
          content:
            application/json:
              examples:
                queryParamsValidation:
                  summary: Query Validation Failed
                  value:
                    message: Validation failed
                    errors:
                      - field: wallet
                        message: Invalid Ethereum address
                      - field: chain
                        message: Invalid enum value. Expected 'BASE' | 'OPTIMISM' | 'ETHEREUM' | 'ARBITRUM', received {input}
                      - field: token
                        message: Invalid enum value. Expected 'USDC' | 'USDT' | 'DAI', received {input}
                tokenNotSupportedCrosschain:
                  summary: Token not supported for crosschain payment
                  value:
                    message: FAU is not supported in crosschain payment.
                    error: Bad Request
                    statusCode: 400
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Get payment calldata
      tags:
        - Request
        - V1/Request
  /v1/request/{paymentReference}/routes:
    get:
      description: Get available payment routes for a request. This endpoint analyzes the payer's wallet balance across supported chains and returns possible payment methods. Routes include direct same-chain payments and crosschain bridging options when the payer has sufficient balance on different chains than the request's native chain.
      operationId: RequestControllerV1_getRequestPaymentRoutes_v1
      parameters:
        - name: paymentReference
          required: true
          in: path
          description: The payment reference of the request
          schema:
            example: '0xb3581f0b0f74cc61'
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: wallet
          required: true
          in: query
          description: The wallet address of the payer
          schema:
            example: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
            type: string
        - name: amount
          required: false
          in: query
          description: The amount to pay, in human readable format
          schema:
            type: string
        - name: feePercentage
          required: false
          in: query
          description: Fee percentage to apply at payment time (e.g., '2.5' for 2.5%)
          schema:
            type: string
        - name: feeAddress
          required: false
          in: query
          description: Address to receive the fee
          schema:
            type: string
      responses:
        '200':
          description: Available payment routes
          content:
            application/json:
              schema:
                type: object
                description: Available payment routes for the request
                properties:
                  routes:
                    type: array
                    description: Array of available payment routes
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the route
                        fee:
                          type: number
                          description: Fee for this route (as a decimal, e.g., 0.001 = 0.1%)
                        speed:
                          type:
                            - string
                            - number
                          description: Route speed - 'FAST' for direct payments, number of seconds for crosschain
                        price_impact:
                          type: number
                          description: Price impact of the route (as a decimal)
                        chain:
                          type: string
                          description: Source chain for the payment
                        token:
                          type: string
                          description: Token symbol for the payment
                      required:
                        - id
                        - fee
                        - speed
                        - chain
                        - token
                required:
                  - routes
              examples:
                requestNetworkRoute:
                  summary: Only request network route
                  value:
                    routes:
                      - id: REQUEST_NETWORK_PAYMENT
                        fee: 0
                        speed: FAST
                        price_impact: 0
                        chain: MAINNET
                        token: REQ
                sameChainRoute:
                  summary: Same-chain payment possible
                  value:
                    routes:
                      - id: REQUEST_NETWORK_PAYMENT
                        fee: 0
                        speed: FAST
                        price_impact: 0
                        chain: BASE
                        token: USDC
                      - id: BASE-BASE-USDC-USDC
                        fee: 0.001
                        speed: 0
                        price_impact: 0
                        chain: BASE
                        token: USDC
                crosschainRoute:
                  summary: Crosschain possible
                  value:
                    routes:
                      - id: REQUEST_NETWORK_PAYMENT
                        fee: 0
                        speed: FAST
                        price_impact: 0
                        chain: BASE
                        token: USDC
                      - id: BASE_OPTIMISM_USDC_USDC
                        fee: 0.001
                        speed: 10
                        price_impact: 0.999
                        chain: OPTIMISM
                        token: USDC
                noRoutes:
                  summary: No routes available
                  value:
                    routes: []
        '400':
          description: Invalid or missing wallet address
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Get payment routes
      tags:
        - Request
        - V1/Request
      x-feature-flag: crosschainDisabled
  /v1/request/{paymentIntentId}/send:
    post:
      description: Send a payment intent
      operationId: RequestControllerV1_sendPaymentIntent_v1
      parameters:
        - name: paymentIntentId
          required: true
          in: path
          description: The payment intent ID
          schema:
            example: 01JNZYZPK7B4YBPD44TM72NDNJ
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signedPaymentIntent:
                  type: object
                  properties:
                    signature:
                      type: string
                      description: The signature of the permit2 approval for token transfer
                    nonce:
                      type: string
                      description: The unique nonce for this permit2 transaction
                    deadline:
                      type: string
                      description: The Unix timestamp when this permit2 approval expires
                  required:
                    - signature
                    - nonce
                    - deadline
                  description: The signed payment intent data.
                signedApprovalPermit:
                  type: object
                  properties:
                    signature:
                      type: string
                      description: The signature for the EIP2612 gasless token approval
                    nonce:
                      type: string
                      description: The unique nonce for the EIP2612 permit
                    deadline:
                      type: string
                      description: The Unix timestamp when this EIP2612 permit expires
                  required:
                    - signature
                    - nonce
                    - deadline
                  description: The EIP2612 gasless token approval data that allows Permit2 to access user tokens
              required:
                - signedPaymentIntent
      responses:
        '401':
          description: Unauthorized
        '404':
          description: Payment intent data not found
        '429':
          description: Too Many Requests
      summary: Send a payment intent
      tags:
        - Request
        - V1/Request
      x-feature-flag: crosschainDisabled
  /v2/request:
    post:
      description: Create a new payment request
      operationId: RequestControllerV2_createRequest_v2
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payer:
                  type: string
                  description: The wallet address of the payer
                payee:
                  type: string
                  description: The wallet address of the payee. Required for all requests except crypto-to-fiat
                amount:
                  type: string
                  description: The payable amount of the invoice, in human readable format
                invoiceCurrency:
                  type: string
                  description: 'Invoice Currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: USD'
                paymentCurrency:
                  type: string
                  description: 'Payment currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: ETH-sepolia-sepolia'
                recurrence:
                  type: object
                  properties:
                    startDate:
                      type:
                        - string
                        - 'null'
                      description: The start date of the invoice
                    frequency:
                      type: string
                      enum:
                        - DAILY
                        - WEEKLY
                        - MONTHLY
                        - YEARLY
                      description: The frequency of the invoice
                  required:
                    - startDate
                    - frequency
                  description: The recurrence of the invoice
                isCryptoToFiatAvailable:
                  type: boolean
                  description: Whether crypto-to-fiat payment is available for this request
              required:
                - amount
                - invoiceCurrency
                - paymentCurrency
              example:
                payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                amount: '10'
                invoiceCurrency: USD
                paymentCurrency: ETH-sepolia-sepolia
                isCryptoToFiatAvailable: false
                recurrence:
                  startDate: 2025-01-01T00:00:00.000Z
                  frequency: DAILY
      responses:
        '201':
          description: Request created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentReference:
                    type: string
                    description: Unique identifier of the request, used to pay the request as well as check the status of the request
                    example: '0xb3581f0b0f74cc61'
                  requestId:
                    type: string
                    description: Unique identifier of the request, commonly used to look up a request in Request Scan
                    example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
        '400':
          description: Validation failed
        '401':
          description: Unauthorized
        '404':
          description: Wallet not found
        '429':
          description: Too Many Requests
      summary: Create a new request
      tags:
        - Request
        - V2/Request
  /v2/request/{requestId}:
    get:
      description: Get the status of a payment request
      operationId: RequestControllerV2_getRequestStatus_v2
      parameters:
        - name: requestId
          required: true
          in: path
          description: The requestId for the request
          schema:
            example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasBeenPaid:
                    type: boolean
                    description: Whether the request has been paid
                  paymentReference:
                    type: string
                    description: Unique identifier used for payments and status checks
                  requestId:
                    type: string
                    description: Unique identifier of the request
                  isListening:
                    type: boolean
                    description: Whether the system is actively listening for payments on this request
                  txHash:
                    type: string
                    nullable: true
                    description: Transaction hash of the payment, null if not yet paid
                  recurrence:
                    type: object
                    description: Recurrence configuration for recurring requests
                  originalRequestId:
                    type: string
                    description: Original request ID for recurring requests
                  status:
                    type: string
                    description: Current status of the request
                  isCryptoToFiatAvailable:
                    type: boolean
                    description: Whether crypto-to-fiat conversion is available for this request
                  originalRequestPaymentReference:
                    type: string
                    description: Payment reference of the original request for recurring payments
                  payments:
                    type: array
                    description: Array of payments made to this request
                    items:
                      type: object
                  isRecurrenceStopped:
                    type: boolean
                    description: Whether recurrence has been stopped for this request
                required:
                  - hasBeenPaid
                  - paymentReference
                  - requestId
                  - isListening
                  - txHash
                additionalProperties: false
              examples:
                paid:
                  summary: Request has been paid
                  value:
                    hasBeenPaid: true
                    requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    isListening: false
                    txHash: '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
                notPaid:
                  summary: Request has not been paid
                  value:
                    hasBeenPaid: false
                    requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    isListening: false
                    txHash: null
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Get request status
      tags:
        - Request
        - V2/Request
    patch:
      description: Update a recurring request
      operationId: RequestControllerV2_updateRequest_v2
      parameters:
        - name: requestId
          required: true
          in: path
          description: The requestId for the request
          schema:
            example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recurrence updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Update a recurring request
      tags:
        - Request
        - V2/Request
  /v2/request/{requestId}/pay:
    get:
      description: 'Get the calldata needed to pay a request. For same-chain payments, returns transaction calldata that can be directly executed. For crosschain payments (when chain and token parameters are provided and differ from the request''s native chain), returns a payment intent that needs to be signed and processed through the crosschain bridge. For off-ramp payments, use the query parameters clientUserId and paymentDetailsId. Note: Crosschain requests with an expectedAmount less than 1 are rejected.'
      operationId: RequestControllerV2_getPaymentCalldata_v2
      parameters:
        - name: requestId
          required: true
          in: path
          description: The requestId of the request
          schema:
            example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: wallet
          required: false
          in: query
          description: The wallet address of the payer.
          schema:
            example: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
            type: string
        - name: chain
          required: false
          in: query
          description: The source chain of the crosschain payment
          x-feature-flag: crosschainDisabled
          schema:
            enum:
              - BASE
              - OPTIMISM
              - ARBITRUM
              - ETHEREUM
            type: string
        - name: token
          required: false
          in: query
          description: The source token of the crosschain payment
          x-feature-flag: crosschainDisabled
          schema:
            enum:
              - USDC
              - USDT
              - DAI
            type: string
        - name: amount
          required: false
          in: query
          description: The amount to pay, in human readable format
          schema:
            type: string
        - name: clientUserId
          required: false
          in: query
          description: Optional client user ID for off-ramp payments
          schema:
            example: user-123
            type: string
        - name: paymentDetailsId
          required: false
          in: query
          description: Optional payment details ID for off-ramp payments
          schema:
            example: fa898aec-519c-46be-9b4c-e76ef4ff99d9
            type: string
        - name: feePercentage
          required: false
          in: query
          description: Fee percentage to apply at payment time (e.g., '2.5' for 2.5%)
          schema:
            example: '0.02'
            type: string
        - name: feeAddress
          required: false
          in: query
          description: Address to receive the fee
          schema:
            example: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
            type: string
      responses:
        '200':
          description: Payment calldata retrieved successfully
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    title: Same-chain Payment Response
                    description: Response for same-chain payments with transaction calldata
                    properties:
                      transactions:
                        type: array
                        description: Array of transactions to execute for the payment
                        items:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Transaction calldata
                            to:
                              type: string
                              description: Target contract address
                            value:
                              type: object
                              description: Payment amount in EVM-compatible format
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - BigNumber
                                hex:
                                  type: string
                                  description: Amount encoded in hex
                          required:
                            - data
                            - to
                            - value
                      metadata:
                        type: object
                        description: Metadata about the payment requirements
                        properties:
                          stepsRequired:
                            type: number
                            description: Number of transactions required
                          needsApproval:
                            type: boolean
                            description: Whether token approval is needed
                          approvalTransactionIndex:
                            type: number
                            nullable: true
                            description: Index of the approval transaction if needed
                          hasEnoughBalance:
                            type: boolean
                            description: Whether payer has sufficient balance
                          hasEnoughGas:
                            type: boolean
                            description: Whether payer has sufficient gas
                        required:
                          - stepsRequired
                          - needsApproval
                          - hasEnoughBalance
                          - hasEnoughGas
                    required:
                      - transactions
                      - metadata
                  - type: object
                    title: Crosschain Payment Response
                    description: Response for crosschain payments with payment intent to be signed
                    properties:
                      paymentIntentId:
                        type: string
                        description: Unique identifier for the payment intent
                      paymentIntent:
                        type: string
                        description: EIP-712 typed data for payment intent signature
                      approvalPermitPayload:
                        type: string
                        nullable: true
                        description: EIP-712 typed data for token approval permit (for EIP-2612 compliant tokens)
                      approvalCalldata:
                        type: object
                        nullable: true
                        description: Transaction calldata for token approval (for non-EIP-2612 tokens)
                        properties:
                          to:
                            type: string
                            description: Token contract address
                          data:
                            type: string
                            description: Approval transaction calldata
                          value:
                            type: string
                            description: Transaction value (usually '0x0')
                      metadata:
                        type: object
                        description: Metadata about the crosschain payment
                        properties:
                          supportsEIP2612:
                            type: boolean
                            description: Whether the token supports EIP-2612 permits
                        required:
                          - supportsEIP2612
                    required:
                      - paymentIntentId
                      - paymentIntent
                      - metadata
              examples:
                native:
                  summary: Native currency payment
                  value:
                    transactions:
                      - data: 0xb868980b...00
                        to: '0x11BF2fDA23bF0A98365e1A4e04A87C9339e8687'
                        value:
                          type: BigNumber
                          hex: '0x038d7ea4c68000'
                    metadata:
                      stepsRequired: 1
                      needsApproval: false
                      approvalTransactionIndex: null
                      hasEnoughBalance: true
                      hasEnoughGas: true
                token:
                  summary: ERC20 token payment
                  value:
                    transactions:
                      - data: 0x095ea7b3...ff
                        to: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324cf623C'
                        value: 0
                      - data: 0xc219a14d...00
                        to: '0x399F5EE127ce7432E4921a61b8CF52b0af52cbfE'
                        value: 0
                    metadata:
                      stepsRequired: 2
                      needsApproval: true
                      approvalTransactionIndex: 0
                      hasEnoughBalance: true
                      hasEnoughGas: true
                currencyThatSupportsEIP2612:
                  summary: Crosschain payment with a currency that supports EIP-2612
                  x-feature-flag: crosschainDisabled
                  value:
                    paymentIntentId: 01JPHNEY8RRJTB94Q34GAW8BC3
                    paymentIntent: |-
                      {
                        "domain": {
                          "name": "Permit2",
                          "chainId": 42161,
                          "verifyingContract": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                        },
                        "types": {
                          "PermitBatchWitnessTransferFrom": [
                            {
                              "name": "permitted",
                              "type": "TokenPermissions[]"
                            },
                            {
                              "name": "spender",
                              "type": "address"
                            },
                            {
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "name": "deadline",
                              "type": "uint256"
                            },
                            {
                              "name": "witness",
                              "type": "PaymentIntent"
                            }
                          ],
                          "TokenPermissions": [
                            {
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "PaymentIntent": [
                            {
                              "name": "payment_type",
                              "type": "uint8"
                            },
                            {
                              "name": "operator_data",
                              "type": "OperatorData"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            },
                            {
                              "name": "source",
                              "type": "Domain"
                            },
                            {
                              "name": "destination",
                              "type": "Domain"
                            },
                            {
                              "name": "processing_date",
                              "type": "uint256"
                            },
                            {
                              "name": "expires_at",
                              "type": "uint256"
                            }
                          ],
                          "OperatorData": [
                            {
                              "name": "operatorId",
                              "type": "bytes32"
                            },
                            {
                              "name": "operator",
                              "type": "address"
                            },
                            {
                              "name": "treasury_account",
                              "type": "address"
                            },
                            {
                              "name": "fee",
                              "type": "uint256"
                            }
                          ],
                          "Domain": [
                            {
                              "name": "account",
                              "type": "address"
                            },
                            {
                              "name": "network_id",
                              "type": "uint256"
                            },
                            {
                              "name": "payment_token",
                              "type": "address"
                            }
                          ]
                        },
                        "values": {
                          "permitted": [
                            {
                              "token": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
                              "amount": "1998000"
                            },
                            {
                              "token": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
                              "amount": "0"
                            },
                            {
                              "token": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
                              "amount": "2000"
                            }
                          ],
                          "spender": "0x4B1d5b0aF5AbAe333C8d2CCa2a346e0D5f68C427",
                          "nonce": "1742202173708",
                          "deadline": "1742205771",
                          "witness": {
                            "payment_type": 0,
                            "operator_data": {
                              "operatorId": "0x6ab1463ead4ba60b8e08155b29ea2b3c91731e78be09b6e12b6c25414d724dd0",
                              "operator": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "treasury_account": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "fee": "0"
                            },
                            "amount": "2000000",
                            "source": {
                              "account": "0xb07D2398d2004378cad234DA0EF14f1c94A530e4",
                              "network_id": "42161",
                              "payment_token": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"
                            },
                            "destination": {
                              "account": "0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7",
                              "network_id": "8453",
                              "payment_token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                            },
                            "processing_date": "1742220173",
                            "expires_at": "1742205771"
                          }
                        }
                      }
                    approvalPermitPayload: |-
                      {
                        "domain": {
                          "name": "USD Coin",
                          "version": "2",
                          "chainId": 42161,
                          "verifyingContract": "0xaf88d065e77c8cc2239327c5edb3a432268e5831"
                        },
                        "types": {
                          "Permit": [
                            {
                              "name": "owner",
                              "type": "address"
                            },
                            {
                              "name": "spender",
                              "type": "address"
                            },
                            {
                              "name": "value",
                              "type": "uint256"
                            },
                            {
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "name": "deadline",
                              "type": "uint256"
                            }
                          ]
                        },
                        "values": {
                          "owner": "0xb07D2398d2004378cad234DA0EF14f1c94A530e4",
                          "spender": "0x000000000022D473030F116dDEE9F6B43aC78BA3",
                          "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
                          "nonce": "1",
                          "deadline": 1742205771
                        }
                      }
                    metadata:
                      supportsEIP2612: true
                currencyThatDoesNotSupportEIP2612:
                  summary: Crosschain payment with a currency that does not support EIP-2612
                  x-feature-flag: crosschainDisabled
                  value:
                    paymentIntentId: 01JPHNFMRC2JFG4W08FGDG4KD3
                    paymentIntent: |-
                      {
                        "domain": {
                          "name": "Permit2",
                          "chainId": 42161,
                          "verifyingContract": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                        },
                        "types": {
                          "PermitBatchWitnessTransferFrom": [
                            {
                              "name": "permitted",
                              "type": "TokenPermissions[]"
                            },
                            {
                              "name": "spender",
                              "type": "address"
                            },
                            {
                              "name": "nonce",
                              "type": "uint256"
                            },
                            {
                              "name": "deadline",
                              "type": "uint256"
                            },
                            {
                              "name": "witness",
                              "type": "PaymentIntent"
                            }
                          ],
                          "TokenPermissions": [
                            {
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            }
                          ],
                          "PaymentIntent": [
                            {
                              "name": "payment_type",
                              "type": "uint8"
                            },
                            {
                              "name": "operator_data",
                              "type": "OperatorData"
                            },
                            {
                              "name": "amount",
                              "type": "uint256"
                            },
                            {
                              "name": "source",
                              "type": "Domain"
                            },
                            {
                              "name": "destination",
                              "type": "Domain"
                            },
                            {
                              "name": "processing_date",
                              "type": "uint256"
                            },
                            {
                              "name": "expires_at",
                              "type": "uint256"
                            }
                          ],
                          "OperatorData": [
                            {
                              "name": "operatorId",
                              "type": "bytes32"
                            },
                            {
                              "name": "operator",
                              "type": "address"
                            },
                            {
                              "name": "treasury_account",
                              "type": "address"
                            },
                            {
                              "name": "fee",
                              "type": "uint256"
                            }
                          ],
                          "Domain": [
                            {
                              "name": "account",
                              "type": "address"
                            },
                            {
                              "name": "network_id",
                              "type": "uint256"
                            },
                            {
                              "name": "payment_token",
                              "type": "address"
                            }
                          ]
                        },
                        "values": {
                          "permitted": [
                            {
                              "token": "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
                              "amount": "1998000"
                            },
                            {
                              "token": "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
                              "amount": "0"
                            },
                            {
                              "token": "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
                              "amount": "2000"
                            }
                          ],
                          "spender": "0x4B1d5b0aF5AbAe333C8d2CCa2a346e0D5f68C427",
                          "nonce": "1742202196746",
                          "deadline": "1742205796",
                          "witness": {
                            "payment_type": 0,
                            "operator_data": {
                              "operatorId": "0x6ab1463ead4ba60b8e08155b29ea2b3c91731e78be09b6e12b6c25414d724dd0",
                              "operator": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "treasury_account": "0xd36B6f4040B8449e93eb2B348EdCD2a968AEA9D9",
                              "fee": "0"
                            },
                            "amount": "2000000",
                            "source": {
                              "account": "0xb07D2398d2004378cad234DA0EF14f1c94A530e4",
                              "network_id": "42161",
                              "payment_token": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"
                            },
                            "destination": {
                              "account": "0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7",
                              "network_id": "8453",
                              "payment_token": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913"
                            },
                            "processing_date": "1742220196",
                            "expires_at": "1742205796"
                          }
                        }
                      }
                    approvalCalldata:
                      to: '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9'
                      data: '0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'
                      value: '0x0'
                    metadata:
                      supportsEIP2612: false
        '400':
          description: Validation failed
          content:
            application/json:
              examples:
                queryParamsValidation:
                  summary: Query Validation Failed
                  value:
                    message: Validation failed
                    errors:
                      - field: wallet
                        message: Invalid Ethereum address
                      - field: chain
                        message: Invalid enum value. Expected 'POLYGON' | 'BASE' | 'OPTIMISM' | 'ETHEREUM' | 'ARBITRUM', received {input}
                      - field: token
                        message: Invalid enum value. Expected 'USDC' | 'USDT' | 'DAI', received {input}
                tokenNotSupportedCrosschain:
                  summary: Token not supported for crosschain payment
                  value:
                    message: FAU is not supported in crosschain payment.
                    error: Bad Request
                    statusCode: 400
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Get payment calldata
      tags:
        - Request
        - V2/Request
  /v2/request/{requestId}/routes:
    get:
      description: Get available payment routes for a request. This endpoint analyzes the payer's wallet balance across supported chains and returns possible payment methods. Routes include direct same-chain payments and crosschain bridging options when the payer has sufficient balance on different chains than the request's native chain.
      operationId: RequestControllerV2_getRequestPaymentRoutes_v2
      parameters:
        - name: requestId
          required: true
          in: path
          description: The requestId of the request
          schema:
            example: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
        - name: wallet
          required: true
          in: query
          description: The wallet address of the payer
          schema:
            example: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
            type: string
        - name: amount
          required: false
          in: query
          description: The amount to pay, in human readable format
          schema:
            type: string
        - name: feePercentage
          required: false
          in: query
          description: Fee percentage to apply at payment time (e.g., '2.5' for 2.5%)
          schema:
            type: string
        - name: feeAddress
          required: false
          in: query
          description: Address to receive the fee
          schema:
            type: string
      responses:
        '200':
          description: Available payment routes
          content:
            application/json:
              schema:
                type: object
                description: Available payment routes for the request
                properties:
                  routes:
                    type: array
                    description: Array of available payment routes
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the route
                        fee:
                          type: number
                          description: Fee for this route (as a decimal, e.g., 0.001 = 0.1%)
                        speed:
                          type:
                            - string
                            - number
                          description: Route speed - 'FAST' for direct payments, number of seconds for crosschain
                        price_impact:
                          type: number
                          description: Price impact of the route (as a decimal)
                        chain:
                          type: string
                          description: Source chain for the payment
                        token:
                          type: string
                          description: Token symbol for the payment
                      required:
                        - id
                        - fee
                        - speed
                        - chain
                        - token
                required:
                  - routes
              examples:
                requestNetworkRoute:
                  summary: Only request network route
                  value:
                    routes:
                      - id: REQUEST_NETWORK_PAYMENT
                        fee: 0
                        speed: FAST
                        price_impact: 0
                        chain: MAINNET
                        token: REQ
                sameChainRoute:
                  summary: Same-chain payment possible
                  value:
                    routes:
                      - id: REQUEST_NETWORK_PAYMENT
                        fee: 0
                        speed: FAST
                        price_impact: 0
                        chain: BASE
                        token: USDC
                      - id: BASE-BASE-USDC-USDC
                        fee: 0.001
                        speed: FAST
                        price_impact: 0
                        chain: BASE
                        token: USDC
                crosschainRoute:
                  summary: Crosschain possible
                  value:
                    routes:
                      - id: REQUEST_NETWORK_PAYMENT
                        fee: 0
                        speed: FAST
                        price_impact: 0
                        chain: BASE
                        token: USDC
                      - id: POLYGON_BASE_USDC_USDC
                        fee: 0.001
                        speed: FAST
                        price_impact: 0.999
                        chain: POLYGON
                        token: USDC
                noRoutes:
                  summary: No routes available
                  value:
                    routes: []
        '400':
          description: Invalid or missing wallet address
        '401':
          description: Unauthorized
        '404':
          description: Request not found
        '429':
          description: Too Many Requests
      summary: Get payment routes
      tags:
        - Request
        - V2/Request
      x-feature-flag: crosschainDisabled
  /v2/request/payment-intents/{paymentIntentId}:
    post:
      description: Send a payment intent
      operationId: RequestControllerV2_sendPaymentIntent_v2
      parameters:
        - name: paymentIntentId
          required: true
          in: path
          description: The payment intent ID
          schema:
            example: 01JNZYZPK7B4YBPD44TM72NDNJ
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signedPaymentIntent:
                  type: object
                  properties:
                    signature:
                      type: string
                      description: The signature of the permit2 approval for token transfer
                    nonce:
                      type: string
                      description: The unique nonce for this permit2 transaction
                    deadline:
                      type: string
                      description: The Unix timestamp when this permit2 approval expires
                  required:
                    - signature
                    - nonce
                    - deadline
                  description: The signed payment intent data.
                signedApprovalPermit:
                  type: object
                  properties:
                    signature:
                      type: string
                      description: The signature for the EIP2612 gasless token approval
                    nonce:
                      type: string
                      description: The unique nonce for the EIP2612 permit
                    deadline:
                      type: string
                      description: The Unix timestamp when this EIP2612 permit expires
                  required:
                    - signature
                    - nonce
                    - deadline
                  description: The EIP2612 gasless token approval data that allows Permit2 to access user tokens
              required:
                - signedPaymentIntent
      responses:
        '200':
          description: Payment intent sent successfully
        '401':
          description: Unauthorized
        '404':
          description: Payment intent data not found
        '429':
          description: Too Many Requests
      summary: Send a payment intent
      tags:
        - Request
        - V2/Request
      x-feature-flag: crosschainDisabled
  /v1/payer:
    post:
      description: Checks compliance status and returns necessary URLs for completing compliance.
      operationId: PayerV1Controller_getComplianceData_v1
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientUserId:
                  type: string
                  minLength: 1
                  description: Client User ID
                email:
                  type: string
                  format: email
                  description: Email
                firstName:
                  type: string
                  minLength: 1
                  description: First Name
                lastName:
                  type: string
                  minLength: 1
                  description: Last Name
                beneficiaryType:
                  type: string
                  enum:
                    - individual
                    - business
                companyName:
                  type: string
                  description: Company Name
                dateOfBirth:
                  type: string
                  pattern: ^\d{4}-\d{2}-\d{2}$
                  description: Date of birth in YYYY-MM-DD format
                addressLine1:
                  type: string
                  minLength: 1
                  description: Address Line 1
                addressLine2:
                  type: string
                  description: Address Line 2
                city:
                  type: string
                  minLength: 1
                  description: City
                state:
                  type: string
                  minLength: 1
                  description: State
                postcode:
                  type: string
                  minLength: 1
                  description: Postcode
                country:
                  type: string
                  minLength: 2
                  maxLength: 2
                  description: Country
                nationality:
                  type: string
                  minLength: 2
                  maxLength: 2
                  description: Nationality
                phone:
                  type: string
                  pattern: ^\+?[1-9]\d{1,14}$
                  description: Phone in E.164 format
                ssn:
                  type: string
                  minLength: 1
                  description: Social Security Number
                sourceOfFunds:
                  type: string
                  description: Source of Funds
                businessActivity:
                  type: string
                  description: Business Activity
              required:
                - clientUserId
                - email
                - firstName
                - lastName
                - beneficiaryType
                - dateOfBirth
                - addressLine1
                - city
                - state
                - postcode
                - country
                - nationality
                - phone
                - ssn
              example:
                clientUserId: user-123
                email: john.doe@example.com
                firstName: John
                lastName: Doe
                beneficiaryType: individual
                dateOfBirth: '1985-12-12'
                addressLine1: 123 Main Street
                city: New York
                state: NY
                postcode: '10001'
                country: US
                nationality: US
                phone: '+12125551234'
                ssn: 123-45-6789
      responses:
        '200':
          description: Compliance data retrieved successfully
          content:
            application/json:
              schema:
                _def:
                  unknownKeys: strip
                  catchall:
                    _def:
                      typeName: ZodNever
                    ~standard:
                      version: 1
                      vendor: zod
                  typeName: ZodObject
                  openapi:
                    _internal:
                      refId: ComplianceResponse
                ~standard:
                  version: 1
                  vendor: zod
                _cached: null
              examples:
                success:
                  summary: Successful response
                  value:
                    agreementUrl: https://core-api.pay.so/v1/public/agreements?email=john.doe%40example.com
                    kycUrl: https://sumsub.com/idensic/l/#/sbx_VvK9E9P2A23xQPoA
                    status:
                      agreementStatus: not_started
                      kycStatus: not_started
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Compliance is only required for off-ramp requests
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Request not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Request with payment reference pay-ref-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Create compliance data for a user
      tags:
        - Payer
        - V1/Payer
  /v1/payer/{clientUserId}:
    patch:
      description: Update the agreement completion status for a user.
      operationId: PayerV1Controller_updateComplianceStatus_v1
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID to update
          schema:
            example: user-123
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agreementCompleted:
                  type: boolean
              required:
                - agreementCompleted
              example:
                agreementCompleted: true
      responses:
        '200':
          description: Compliance status updated successfully
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: agreementCompleted must be provided
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Payer with client user ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Update agreement status
      tags:
        - Payer
        - V1/Payer
    get:
      description: Retrieves the comprehensive compliance status for a specific user, including KYC and agreement status.
      operationId: PayerV1Controller_getComplianceStatus_v1
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID to check compliance status for
          schema:
            example: user-123
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Compliance status retrieved successfully
          content:
            application/json:
              schema:
                properties:
                  kycStatus:
                    type: string
                    example: completed
                  agreementStatus:
                    type: string
                    example: completed
                  isCompliant:
                    type: boolean
                    example: true
                  userId:
                    type: string
                    example: a25a4274-8f50-4579-b476-8f35b297d4ad
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Payer with client user ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Get compliance status for a user
      tags:
        - Payer
        - V1/Payer
  /v1/payer/{clientUserId}/payment-details:
    post:
      description: Create payment details for a user
      operationId: PayerV1Controller_createPaymentDetails_v1
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID
          schema:
            example: user-123
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bankName:
                  type: string
                  minLength: 1
                  description: Name of the bank
                accountName:
                  type: string
                  minLength: 1
                  description: Name of the account holder
                accountNumber:
                  type: string
                  description: Bank account number
                routingNumber:
                  type: string
                  description: Bank routing number (US)
                beneficiaryType:
                  type: string
                  enum:
                    - individual
                    - business
                  description: Type of beneficiary
                currency:
                  type: string
                  minLength: 3
                  maxLength: 3
                  description: Three-letter currency code (ISO 4217)
                addressLine1:
                  type: string
                  minLength: 1
                  description: Primary address line
                addressLine2:
                  type: string
                  description: Secondary address line
                city:
                  type: string
                  minLength: 1
                  description: City name
                state:
                  type: string
                  description: State or province code
                country:
                  type: string
                  minLength: 2
                  maxLength: 2
                  description: Two-letter country code (ISO 3166-1 alpha-2)
                dateOfBirth:
                  type: string
                  pattern: ^\d{4}-\d{2}-\d{2}$
                  description: Date of birth in YYYY-MM-DD format
                postalCode:
                  type: string
                  minLength: 1
                  description: Postal or ZIP code
                rails:
                  type: string
                  enum:
                    - local
                    - swift
                    - wire
                  default: local
                  description: Payment rail type
                sortCode:
                  type: string
                  description: UK bank sort code
                iban:
                  type: string
                  description: International Bank Account Number
                swiftBic:
                  type: string
                  description: SWIFT/BIC code
                documentNumber:
                  type: string
                  description: Government-issued ID number
                documentType:
                  type: string
                  description: Type of government-issued ID (e.g., passport, driver's license)
                accountType:
                  type: string
                  enum:
                    - checking
                    - savings
                  description: Type of bank account
                ribNumber:
                  type: string
                  description: French RIB number
                bsbNumber:
                  type: string
                  description: Australian BSB number
                ncc:
                  type: string
                  description: New Zealand NCC number
                branchCode:
                  type: string
                  description: Bank branch code
                bankCode:
                  type: string
                  description: Bank code
                ifsc:
                  type: string
                  description: Indian Financial System Code
              required:
                - bankName
                - accountName
                - beneficiaryType
                - currency
                - addressLine1
                - city
                - country
                - dateOfBirth
                - postalCode
              example:
                bankName: Chase
                accountName: Gordon's Chase Business Account
                accountNumber: '253009233489'
                routingNumber: '026013356'
                beneficiaryType: business
                currency: usd
                addressLine1: 24 Theatre St.
                city: Paramount
                state: CA
                postalCode: '90723'
                country: US
                dateOfBirth: '1985-12-12'
                rails: local
      responses:
        '201':
          description: Payment details created successfully
          content:
            application/json:
              schema:
                properties:
                  payment_detail:
                    type: object
                    properties:
                      id:
                        type: string
                        example: pd_123456
                      clientUserId:
                        type: string
                        example: user-123
                      bankName:
                        type: string
                        example: Chase
                      accountName:
                        type: string
                        example: Gordon's Chase Business Account
                      currency:
                        type: string
                        example: usd
                      beneficiaryType:
                        type: string
                        enum:
                          - individual
                          - business
                        example: business
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Invalid bank account details
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: User with ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Create payment details
      tags:
        - Payer
        - V1/Payer
    get:
      description: Retrieves the registered bank account details for a user. Optionally filter by payment details ID.
      operationId: PayerV1Controller_getPaymentDetails_v1
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID to get payment details for
          schema:
            example: user-123
            type: string
        - name: paymentDetailsId
          required: false
          in: query
          description: Optional ID of specific payment details to retrieve
          schema:
            example: fa898aec-519c-46be-9b4c-e76ef4ff99d9
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                properties:
                  paymentDetails:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: fa898aec-519c-46be-9b4c-e76ef4ff99d9
                        userId:
                          type: string
                          example: a25a4274-8f50-4579-b476-8f35b297d4ad
                        bankName:
                          type: string
                          example: Chase
                        accountName:
                          type: string
                          example: Gordon's Chase Business Account
                        beneficiaryType:
                          type: string
                          example: business
                        accountNumber:
                          type: string
                          example: '253009233489'
                        routingNumber:
                          type: string
                          example: '026013356'
                        currency:
                          type: string
                          example: usd
                        status:
                          type: string
                          example: approved
                        rails:
                          type: string
                          example: local
        '401':
          description: Unauthorized
        '404':
          description: User or payment details not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Payer with client user ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Get payment details for a user
      tags:
        - Payer
        - V1/Payer
  /v2/payer:
    post:
      description: Checks compliance status and returns necessary URLs for completing compliance.
      operationId: PayerV2Controller_getComplianceData_v2
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientUserId:
                  type: string
                  minLength: 1
                  description: Client User ID
                email:
                  type: string
                  format: email
                  description: Email
                firstName:
                  type: string
                  minLength: 1
                  description: First Name
                lastName:
                  type: string
                  minLength: 1
                  description: Last Name
                beneficiaryType:
                  type: string
                  enum:
                    - individual
                    - business
                companyName:
                  type: string
                  description: Company Name
                dateOfBirth:
                  type: string
                  pattern: ^\d{4}-\d{2}-\d{2}$
                  description: Date of birth in YYYY-MM-DD format
                addressLine1:
                  type: string
                  minLength: 1
                  description: Address Line 1
                addressLine2:
                  type: string
                  description: Address Line 2
                city:
                  type: string
                  minLength: 1
                  description: City
                state:
                  type: string
                  minLength: 1
                  description: State
                postcode:
                  type: string
                  minLength: 1
                  description: Postcode
                country:
                  type: string
                  minLength: 2
                  maxLength: 2
                  description: Country
                nationality:
                  type: string
                  minLength: 2
                  maxLength: 2
                  description: Nationality
                phone:
                  type: string
                  pattern: ^\+?[1-9]\d{1,14}$
                  description: Phone in E.164 format
                ssn:
                  type: string
                  minLength: 1
                  description: Social Security Number
                sourceOfFunds:
                  type: string
                  description: Source of Funds
                businessActivity:
                  type: string
                  description: Business Activity
              required:
                - clientUserId
                - email
                - firstName
                - lastName
                - beneficiaryType
                - dateOfBirth
                - addressLine1
                - city
                - state
                - postcode
                - country
                - nationality
                - phone
                - ssn
              example:
                clientUserId: user-123
                email: john.doe@example.com
                firstName: John
                lastName: Doe
                beneficiaryType: individual
                dateOfBirth: '1985-12-12'
                addressLine1: 123 Main Street
                city: New York
                state: NY
                postcode: '10001'
                country: US
                nationality: US
                phone: '+12125551234'
                ssn: 123-45-6789
      responses:
        '200':
          description: Compliance data retrieved successfully
          content:
            application/json:
              schema:
                _def:
                  unknownKeys: strip
                  catchall:
                    _def:
                      typeName: ZodNever
                    ~standard:
                      version: 1
                      vendor: zod
                  typeName: ZodObject
                  openapi:
                    _internal:
                      refId: ComplianceResponse
                ~standard:
                  version: 1
                  vendor: zod
                _cached: null
              examples:
                success:
                  summary: Successful response
                  value:
                    agreementUrl: https://core-api.pay.so/v1/public/agreements?email=john.doe%40example.com
                    kycUrl: https://sumsub.com/idensic/l/#/sbx_VvK9E9P2A23xQPoA
                    status:
                      agreementStatus: not_started
                      kycStatus: not_started
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Compliance is only required for off-ramp requests
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Request not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Request with payment reference pay-ref-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Create compliance data for a user
      tags:
        - Payer
        - V2/Payer
  /v2/payer/{clientUserId}:
    patch:
      description: Update the agreement completion status for a user.
      operationId: PayerV2Controller_updateComplianceStatus_v2
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID to update
          schema:
            example: user-123
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agreementCompleted:
                  type: boolean
              required:
                - agreementCompleted
              example:
                agreementCompleted: true
      responses:
        '200':
          description: Compliance status updated successfully
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: agreementCompleted must be provided
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Payer with client user ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Update agreement status
      tags:
        - Payer
        - V2/Payer
    get:
      description: Retrieves the comprehensive compliance status for a specific user, including KYC and agreement status.
      operationId: PayerV2Controller_getComplianceStatus_v2
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID to check compliance status for
          schema:
            example: user-123
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Compliance status retrieved successfully
          content:
            application/json:
              schema:
                properties:
                  kycStatus:
                    type: string
                    example: completed
                  agreementStatus:
                    type: string
                    example: completed
                  isCompliant:
                    type: boolean
                    example: true
                  userId:
                    type: string
                    example: a25a4274-8f50-4579-b476-8f35b297d4ad
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Payer with client user ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Get compliance status for a user
      tags:
        - Payer
        - V2/Payer
  /v2/payer/{clientUserId}/payment-details:
    post:
      description: Create payment details for a user
      operationId: PayerV2Controller_createPaymentDetails_v2
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID
          schema:
            example: user-123
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bankName:
                  type: string
                  minLength: 1
                  description: Name of the bank
                accountName:
                  type: string
                  minLength: 1
                  description: Name of the account holder
                accountNumber:
                  type: string
                  description: Bank account number
                routingNumber:
                  type: string
                  description: Bank routing number (US)
                beneficiaryType:
                  type: string
                  enum:
                    - individual
                    - business
                  description: Type of beneficiary
                currency:
                  type: string
                  minLength: 3
                  maxLength: 3
                  description: Three-letter currency code (ISO 4217)
                addressLine1:
                  type: string
                  minLength: 1
                  description: Primary address line
                addressLine2:
                  type: string
                  description: Secondary address line
                city:
                  type: string
                  minLength: 1
                  description: City name
                state:
                  type: string
                  description: State or province code
                country:
                  type: string
                  minLength: 2
                  maxLength: 2
                  description: Two-letter country code (ISO 3166-1 alpha-2)
                dateOfBirth:
                  type: string
                  pattern: ^\d{4}-\d{2}-\d{2}$
                  description: Date of birth in YYYY-MM-DD format
                postalCode:
                  type: string
                  minLength: 1
                  description: Postal or ZIP code
                rails:
                  type: string
                  enum:
                    - local
                    - swift
                    - wire
                  default: local
                  description: Payment rail type
                sortCode:
                  type: string
                  description: UK bank sort code
                iban:
                  type: string
                  description: International Bank Account Number
                swiftBic:
                  type: string
                  description: SWIFT/BIC code
                documentNumber:
                  type: string
                  description: Government-issued ID number
                documentType:
                  type: string
                  description: Type of government-issued ID (e.g., passport, driver's license)
                accountType:
                  type: string
                  enum:
                    - checking
                    - savings
                  description: Type of bank account
                ribNumber:
                  type: string
                  description: French RIB number
                bsbNumber:
                  type: string
                  description: Australian BSB number
                ncc:
                  type: string
                  description: New Zealand NCC number
                branchCode:
                  type: string
                  description: Bank branch code
                bankCode:
                  type: string
                  description: Bank code
                ifsc:
                  type: string
                  description: Indian Financial System Code
              required:
                - bankName
                - accountName
                - beneficiaryType
                - currency
                - addressLine1
                - city
                - country
                - dateOfBirth
                - postalCode
              example:
                bankName: Chase
                accountName: Gordon's Chase Business Account
                accountNumber: '253009233489'
                routingNumber: '026013356'
                beneficiaryType: business
                currency: usd
                addressLine1: 24 Theatre St.
                city: Paramount
                state: CA
                postalCode: '90723'
                country: US
                dateOfBirth: '1985-12-12'
                rails: local
      responses:
        '201':
          description: Payment details created successfully
          content:
            application/json:
              schema:
                properties:
                  payment_detail:
                    type: object
                    properties:
                      id:
                        type: string
                        example: pd_123456
                      clientUserId:
                        type: string
                        example: user-123
                      bankName:
                        type: string
                        example: Chase
                      accountName:
                        type: string
                        example: Gordon's Chase Business Account
                      currency:
                        type: string
                        example: usd
                      beneficiaryType:
                        type: string
                        enum:
                          - individual
                          - business
                        example: business
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Invalid bank account details
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: User with ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Create payment details
      tags:
        - Payer
        - V2/Payer
    get:
      description: Retrieves the registered bank account details for a user. Optionally filter by payment details ID.
      operationId: PayerV2Controller_getPaymentDetails_v2
      parameters:
        - name: clientUserId
          required: true
          in: path
          description: The client user ID to get payment details for
          schema:
            example: user-123
            type: string
        - name: paymentDetailsId
          required: false
          in: query
          description: Optional ID of specific payment details to retrieve
          schema:
            example: fa898aec-519c-46be-9b4c-e76ef4ff99d9
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                properties:
                  paymentDetails:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: fa898aec-519c-46be-9b4c-e76ef4ff99d9
                        userId:
                          type: string
                          example: a25a4274-8f50-4579-b476-8f35b297d4ad
                        bankName:
                          type: string
                          example: Chase
                        accountName:
                          type: string
                          example: Gordon's Chase Business Account
                        beneficiaryType:
                          type: string
                          example: business
                        accountNumber:
                          type: string
                          example: '253009233489'
                        routingNumber:
                          type: string
                          example: '026013356'
                        currency:
                          type: string
                          example: usd
                        status:
                          type: string
                          example: approved
                        rails:
                          type: string
                          example: local
        '401':
          description: Unauthorized
        '404':
          description: User or payment details not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 404
                  message:
                    type: string
                    example: Payer with client user ID user-123 not found
                  error:
                    type: string
                    example: Not Found
        '429':
          description: Too Many Requests
      summary: Get payment details for a user
      tags:
        - Payer
        - V2/Payer
  /v1/pay:
    post:
      description: Initiate a payment without having to create a request first
      operationId: PayV1Controller_payRequest_v1
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payee:
                  type: string
                  description: The wallet address of the payee
                amount:
                  type: string
                  description: The payable amount of the invoice, in human readable format
                invoiceCurrency:
                  type: string
                  description: 'Invoice Currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: USD'
                paymentCurrency:
                  type: string
                  description: 'Payment currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: ETH-sepolia-sepolia'
              required:
                - payee
                - amount
                - invoiceCurrency
                - paymentCurrency
              example:
                payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                amount: '10'
                invoiceCurrency: USD
                paymentCurrency: ETH-sepolia-sepolia
      responses:
        '201':
          description: Request created and payment initiated successfully
          content:
            application/json:
              schema:
                _def:
                  unknownKeys: strip
                  catchall:
                    _def:
                      typeName: ZodNever
                    ~standard:
                      version: 1
                      vendor: zod
                  typeName: ZodObject
                ~standard:
                  version: 1
                  vendor: zod
                _cached: null
              examples:
                nativeCurrency:
                  summary: Native currency payment (e.g., ETH)
                  value:
                    requestID: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    paymentReference: '0xb3581f0b0f74cc61'
                    transactions:
                      - data: 0xb868980b...00
                        to: '0x11BF2fDA23bF0A98365e1A4e04A87C9339e8687'
                        value:
                          type: BigNumber
                          hex: '0x038d7ea4c68000'
                    metadata:
                      stepsRequired: 1
                      needsApproval: false
                      approvalTransactionIndex: null
                      hasEnoughBalance: true
                      hasEnoughGas: true
                erc20Token:
                  summary: 'V1: ERC20 token payment (requires approval)'
                  value:
                    requestID: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    paymentReference: '0xb3581f0b0f74cc61'
                    transactions:
                      - data: 0x095ea7b3...ff
                        to: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324cf623C'
                        value: 0
                      - data: 0xc219a14d...00
                        to: '0x399F5EE127ce7432E4921a61b8CF52b0af52cbfE'
                        value: 0
                    metadata:
                      stepsRequired: 2
                      needsApproval: true
                      approvalTransactionIndex: 0
                      hasEnoughBalance: true
                      hasEnoughGas: true
        '401':
          description: Unauthorized
        '404':
          description: Wallet not found
        '429':
          description: Too Many Requests
      summary: Initiate a payment
      tags:
        - Pay
        - V1/Pay
  /v2/payouts:
    post:
      description: Initiate a payment without having to create a request first. Supports both one-time and recurring payments. For recurring payments, specify the recurrence object with start date, frequency, total executions, and payer address. The system will create a recurring payment schedule and return the necessary transactions for allowance approval and signature submission.
      operationId: PayoutV2Controller_payRequest_v2
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payee:
                  type: string
                  description: The wallet address of the payee
                amount:
                  type: string
                  description: The payable amount of the invoice, in human readable format
                invoiceCurrency:
                  type: string
                  description: 'Invoice Currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: USD'
                paymentCurrency:
                  type: string
                  description: 'Payment currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: ETH-sepolia-sepolia'
                feePercentage:
                  type: string
                  description: Fee percentage to apply at payment time (e.g., '2.5' for 2.5%)
                feeAddress:
                  type: string
                  description: Address to receive the fee
                recurrence:
                  type: object
                  properties:
                    startDate:
                      type: string
                      description: The start date of the payment, cannot be in the past
                    frequency:
                      type: string
                      enum:
                        - DAILY
                        - WEEKLY
                        - MONTHLY
                        - YEARLY
                      description: The frequency of the payment
                    totalPayments:
                      type: number
                      minimum: 2
                      maximum: 256
                      description: The total number of times the payment will be executed (max 256).
                    payer:
                      type: string
                      description: The wallet address of the payer
                  required:
                    - startDate
                    - frequency
                    - totalPayments
                    - payer
                  description: Configuration details for recurring payments
                payerWallet:
                  type: string
                  description: The wallet address of the payer, use to check if payer approval exists
              required:
                - payee
                - amount
                - invoiceCurrency
                - paymentCurrency
            examples:
              oneTimePayment:
                summary: One-time payment example
                value:
                  payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                  amount: '10'
                  invoiceCurrency: USD
                  paymentCurrency: ETH-sepolia-sepolia
                  feePercentage: '0.02'
                  feeAddress: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
              recurringPayment:
                summary: Recurring payment example
                value:
                  payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                  amount: '10'
                  invoiceCurrency: USD
                  paymentCurrency: ETH-sepolia-sepolia
                  feePercentage: '0.02'
                  feeAddress: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                  recurrence:
                    startDate: 2025-09-11T22:15:13.002Z
                    frequency: DAILY
                    totalPayments: 30
                    payer: '0x2e2E5C79F571ef1658d4C2d3684a1FE97DD30570'
              erc20Payment:
                summary: ERC20 token payment example
                value:
                  payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                  amount: '100'
                  invoiceCurrency: FAU-sepolia
                  paymentCurrency: FAU-sepolia
                  feePercentage: '0.01'
                  feeAddress: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
      responses:
        '201':
          description: Request created and payment initiated successfully
          content:
            application/json:
              schema:
                _def:
                  unknownKeys: strip
                  catchall:
                    _def:
                      typeName: ZodNever
                    ~standard:
                      version: 1
                      vendor: zod
                  typeName: ZodObject
                ~standard:
                  version: 1
                  vendor: zod
                _cached: null
              examples:
                nativeCurrency:
                  summary: Native currency payment (e.g., ETH)
                  value:
                    requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    paymentReference: '0xb3581f0b0f74cc61'
                    transactions:
                      - data: 0xb868980b...00
                        to: '0x11BF2fDA23bF0A98365e1A4e04A87C9339e8687'
                        value:
                          type: BigNumber
                          hex: '0x038d7ea4c68000'
                    metadata:
                      stepsRequired: 1
                      needsApproval: false
                      approvalTransactionIndex: null
                      hasEnoughBalance: true
                      hasEnoughGas: true
                erc20Token:
                  summary: ERC20 token payment (requires approval)
                  value:
                    requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    paymentReference: '0xb3581f0b0f74cc61'
                    transactions:
                      - data: 0x095ea7b3...ff
                        to: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324cf623C'
                        value: 0
                      - data: 0xc219a14d...00
                        to: '0x399F5EE127ce7432E4921a61b8CF52b0af52cbfE'
                        value: 0
                    metadata:
                      stepsRequired: 2
                      needsApproval: true
                      approvalTransactionIndex: 0
                      hasEnoughBalance: true
                      hasEnoughGas: true
                recurringPayment:
                  summary: Recurring payment response (requires signature)
                  value:
                    id: 01JXYJKCAHGFTDR15F2D072ESG
                    transactions:
                      - to: '0xA0b86a33E6441b8c4C8C8C8C8C8C8C8C8C8C8C8'
                        data: '0x095ea7b30000000000000000000000000363dD3ccD4f187d7033c57354CA81f998451D590000000000000000000000000000000000000000000000000000000000000000'
                        value: '0x0'
                    recurringPaymentPermit:
                      domain:
                        name: ERC20RecurringPaymentProxy
                        version: '1'
                        chainId: 11155111
                        verifyingContract: '0x0363dD3ccD4f187d7033c57354CA81f998451D59'
                      types:
                        SchedulePermit:
                          - name: subscriber
                            type: address
                          - name: token
                            type: address
                          - name: recipient
                            type: address
                          - name: feeAddress
                            type: address
                          - name: amount
                            type: uint128
                          - name: feeAmount
                            type: uint128
                          - name: gasFee
                            type: uint128
                          - name: periodSeconds
                            type: uint32
                          - name: firstExec
                            type: uint32
                          - name: totalExecutions
                            type: uint8
                          - name: nonce
                            type: uint256
                          - name: deadline
                            type: uint256
                      values:
                        subscriber: '0x2e2E5C79F571ef1658d4C2d3684a1FE97DD30570'
                        token: '0xA0b86a33E6441b8c4C8C8C8C8C8C8C8C8C8C8C8'
                        recipient: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                        feeAddress: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                        amount: '10000000000000000000'
                        feeAmount: '0'
                        gasFee: '0'
                        periodSeconds: 86400
                        firstExec: 1735732800
                        totalExecutions: 30
                        nonce: '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
                        deadline: 1738404800
                    metadata:
                      stepsRequired: 2
                      totalNeededAllowance: '300000000000000000000'
                      currentAllowance: '0'
                      additionalAllowanceNeeded: '300000000000000000000'
                      existingPaymentsAmount: '0'
        '401':
          description: Unauthorized
        '404':
          description: Wallet not found
        '429':
          description: Too Many Requests
      summary: Initiate a payment
      tags:
        - Pay
        - V2/Payouts
  /v2/payouts/batch:
    post:
      description: Pays multiple payment requests in one transaction by either creating new requests or using existing request IDs. All requests must be on the same network. Supports mixed ERC20, Native, and conversion requests.
      operationId: PayoutV2Controller_payBatchRequest_v2
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  type: array
                  items:
                    type: object
                    properties:
                      payee:
                        type: string
                        description: The wallet address of the payee
                      amount:
                        type: string
                        description: The payable amount of the invoice, in human readable format
                      invoiceCurrency:
                        type: string
                        description: 'Invoice Currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: USD'
                      paymentCurrency:
                        type: string
                        description: 'Payment currency ID, from the [Request Network Token List](https://docs.request.network/general/request-network-token-list) e.g: ETH-sepolia-sepolia'
                    required:
                      - payee
                      - amount
                      - invoiceCurrency
                      - paymentCurrency
                  description: A list of payment requests to be created andprocessed in batch. All requests must be on the same network and contain payment/invoice currency information. Either `requests` or `requestIds` must be provided, but not both.
                requestIds:
                  type: array
                  items:
                    type: string
                  description: The request IDs of the existing requests to be paid. Requests must be on the same network. Either `requests` or `requestIds` must be provided, but not both.
                payer:
                  type: string
                  description: The wallet address of the payer, user to check if approval is needed or not.
              example:
                requests:
                  - payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                    amount: '2'
                    invoiceCurrency: FAU-sepolia
                    paymentCurrency: FAU-sepolia
                  - payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                    amount: '2'
                    invoiceCurrency: fUSDC-sepolia
                    paymentCurrency: fUSDC-sepolia
                  - payee: '0xb07D2398d2004378cad234DA0EF14f1c94A530e4'
                    amount: '10'
                    invoiceCurrency: USD
                    paymentCurrency: FAU-sepolia
                  - payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                    amount: '0.00001'
                    invoiceCurrency: ETH-sepolia-sepolia
                    paymentCurrency: ETH-sepolia-sepolia
                  - payee: '0x6923831ACf5c327260D7ac7C9DfF5b1c3cB3C7D7'
                    amount: '10'
                    invoiceCurrency: USD
                    paymentCurrency: ETH-sepolia-sepolia
                payer: '0x2e2E5C79F571ef1658d4C2d3684a1FE97DD30570'
      responses:
        '201':
          description: Batch payment calldata retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ERC20ApprovalTransactions:
                    type: array
                    description: Array of ERC20 approval transactions needed before the batch payment. Only present when token approval is required.
                    items:
                      type: object
                      properties:
                        data:
                          type: string
                          description: Transaction calldata for the ERC20 approval
                        to:
                          type: string
                          description: Target ERC20 token contract address for approval
                        value:
                          type: integer
                          description: Always 0 for ERC20 approvals
                      required:
                        - data
                        - to
                        - value
                  ERC20BatchPaymentTransaction:
                    type: object
                    description: The batch payment transaction for ERC20 tokens. Only present when the batch contains ERC20 payments.
                    properties:
                      data:
                        type: string
                        description: Transaction calldata for the ERC20 batch payment
                      to:
                        type: string
                        description: Target batch payment contract address
                      value:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - BigNumber
                          hex:
                            type: string
                            description: Payment amount in EVM-compatible format, encoded in hex. Usually 0 for ERC20 payments
                        required:
                          - type
                          - hex
                    required:
                      - data
                      - to
                      - value
                  ETHBatchPaymentTransaction:
                    type: object
                    description: The batch payment transaction for native ETH. Only present when the batch contains ETH payments.
                    properties:
                      data:
                        type: string
                        description: Transaction calldata for the ETH batch payment
                      to:
                        type: string
                        description: Target batch payment contract address
                      value:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - BigNumber
                          hex:
                            type: string
                            description: Payment amount in EVM-compatible format, encoded in hex. Contains the ETH value to send
                        required:
                          - type
                          - hex
                    required:
                      - data
                      - to
                      - value
                additionalProperties: false
              examples:
                erc20_and_eth_with_approval:
                  summary: Batch payment with approval needed
                  value:
                    ERC20ApprovalTransactions:
                      - data: 0x095ea7b3...
                        to: '0x370DE27fdb7D1Ff1e1BaA7D11c5820a324Cf623C'
                        value: 0
                    batchPaymentTransaction:
                      data: 0x92cddb91...
                      to: '0x67818703c92580c0e106e401F253E8A410A66f8B'
                      value:
                        type: BigNumber
                        hex: '0x0d83b3d1afc58b'
                erc20_and_eth_no_approval:
                  summary: Batch payment without approval needed
                  value:
                    ERC20ApprovalTransactions: []
                    batchPaymentTransaction:
                      data: 0x92cddb91...
                      to: '0x67818703c92580c0e106e401F253E8A410A66f8B'
                      value:
                        type: BigNumber
                        hex: '0x0d83b3d1afc58b'
        '400':
          description: Requests must be on the same network
          content:
            application/json:
              examples:
                requestsOnDifferentNetworks:
                  summary: Requests on different networks
                  value:
                    message: All requests must be on the same network
                    error: Bad Request
                    statusCode: 400
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      summary: Pay multiple requests in one transaction
      tags:
        - Pay
        - V2/Payouts
  /v2/payouts/recurring/{id}:
    post:
      description: Submit a signature for a recurring payment permit to activate the recurring payment schedule. This endpoint is called after creating a recurring payment and obtaining the permit data. The signature authorizes the recurring payment contract to execute payments on behalf of the payer according to the schedule. Once activated, payments will be executed automatically at the specified intervals.
      operationId: PayoutV2Controller_submitRecurringPaymentSignature_v2
      parameters:
        - name: id
          required: true
          in: path
          description: The ID of the recurring payment
          schema:
            example: 01JXYJKCAHGFTDR15F2D072ESG
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permitSignature:
                  type: string
                  description: The signature of the recurring payment permit.
              required:
                - permitSignature
              example:
                permitSignature: '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1b'
      responses:
        '201':
          description: Recurring payment signature submitted successfully
          content:
            application/json:
              examples:
                success:
                  summary: Signature submitted successfully
                  value:
                    message: Recurring payment activated successfully
                    id: 01JXYJKCAHGFTDR15F2D072ESG
                    status: active
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                invalidSignature:
                  summary: Invalid signature provided
                  value:
                    message: Invalid signature provided
                    error: Bad Request
                    statusCode: 400
                alreadyActive:
                  summary: Recurring payment is already active
                  value:
                    message: Recurring payment is already active
                    error: Bad Request
                    statusCode: 400
        '401':
          description: Unauthorized
        '404':
          description: Recurring payment not found
        '429':
          description: Too Many Requests
      summary: Submit a recurring payment signature
      tags:
        - Pay
        - V2/Payouts
    get:
      description: Retrieve the current status and execution details of a recurring payment. Returns information about executed payments, remaining executions, next payment date, and overall status. This endpoint is useful for monitoring recurring payment progress and checking if payments are being executed as expected.
      operationId: PayoutV2Controller_getRecurringPaymentStatus_v2
      parameters:
        - name: id
          required: true
          in: path
          description: The ID of the recurring payment
          schema:
            example: 01JXYJKCAHGFTDR15F2D072ESG
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recurring payment status retrieved successfully
          content:
            application/json:
              examples:
                active:
                  summary: Active recurring payment
                  value:
                    processedPayments: 3
                    totalPayments: 30
                    lastPaymentDate: '2025-01-04T10:00:00.000Z'
                    nextPaymentDate: '2025-01-05T10:00:00.000Z'
                    status: active
                    requests:
                      - paymentReference: '0xb3581f0b0f74cc61'
                        requestId: 01e273ecc29d4b526df3a0f1f05ffc59372af8752c2b678096e49ac270416a7cdb
                    payments:
                      - id: 01JXYJKCAHGFTDR15F2D072ESG
                        amount: '10'
                        timestamp: '2025-01-04T10:00:00.000Z'
                        txHash: '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'
                paused:
                  summary: Paused recurring payment
                  value:
                    processedPayments: 5
                    totalPayments: 30
                    lastPaymentDate: '2025-01-05T10:00:00.000Z'
                    nextPaymentDate: null
                    status: paused
                    failureCount: 3
                    failureReason: Insufficient token allowance
                completed:
                  summary: Completed recurring payment
                  value:
                    processedPayments: 30
                    totalPayments: 30
                    lastPaymentDate: '2025-01-30T10:00:00.000Z'
                    nextPaymentDate: null
                    status: completed
        '401':
          description: Unauthorized
        '404':
          description: Recurring payment not found
          content:
            application/json:
              examples:
                notFound:
                  summary: Recurring payment not found
                  value:
                    message: Recurring payment not found
                    error: Not Found
                    statusCode: 404
        '429':
          description: Too Many Requests
      summary: Get the status of a recurring payment
      tags:
        - Pay
        - V2/Payouts
    patch:
      description: Update a recurring payment by cancelling it or unpausing it. When cancelling, optionally returns a transaction to decrease allowance. When unpausing, resumes execution of a paused recurring payment.
      operationId: PayoutV2Controller_updateRecurringPayment_v2
      parameters:
        - name: id
          required: true
          in: path
          description: The ID of the recurring payment
          schema:
            example: 01JXYJKCAHGFTDR15F2D072ESG
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - cancel
                    - unpause
                  description: The action to perform on the recurring payment
              required:
                - action
              example:
                action: cancel
      responses:
        '200':
          description: Recurring payment updated successfully
          content:
            application/json:
              examples:
                cancelled:
                  summary: Recurring payment cancelled
                  value:
                    id: 01JXYJKCAHGFTDR15F2D072ESG
                    status: cancelled
                    transactions:
                      - to: '0xA0b86a33E6441b8c4C8C8C8C8C8C8C8C8C8C8C8'
                        data: '0x095ea7b30000000000000000000000000363dD3ccD4f187d7033c57354CA81f998451D590000000000000000000000000000000000000000000000000000000000000000'
                        value: '0x0'
                    metadata:
                      remainingPayments: 5
                      remainingAmount: '5000000000000000000'
                      processedPayments: 3
                      totalPayments: 8
                unpaused:
                  summary: Recurring payment unpaused
                  value:
                    id: 01JXYJKCAHGFTDR15F2D072ESG
                    status: active
                    metadata:
                      processedPayments: 3
                      totalPayments: 8
                      nextPaymentDate: '2024-01-15T10:00:00.000Z'
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                alreadyCancelled:
                  summary: Recurring payment is already cancelled
                  value:
                    message: Recurring payment is already cancelled
                    error: Bad Request
                    statusCode: 400
                completed:
                  summary: Cannot cancel a completed recurring payment
                  value:
                    message: Cannot cancel a completed recurring payment
                    error: Bad Request
                    statusCode: 400
                notPaused:
                  summary: Recurring payment is not paused
                  value:
                    message: Recurring payment is not paused
                    error: Bad Request
                    statusCode: 400
                invalidAction:
                  summary: Invalid action provided
                  value:
                    message: 'Invalid action: invalid_action'
                    error: Bad Request
                    statusCode: 400
        '401':
          description: Unauthorized
        '404':
          description: Recurring payment not found
        '429':
          description: Too Many Requests
      summary: Update a recurring payment
      tags:
        - Pay
        - V2/Payouts
  /v2/platforms/me:
    get:
      description: |-
        Get the authenticated platform's profile information

        Requires session_token cookie. If you've logged in, this cookie is already set in your browser.
      operationId: PlatformV2Controller_getCurrentPlatform_v2
      parameters:
        - name: Cookie
          in: header
          description: Active session cookie (automatically included after login)
          required: true
          schema:
            type: string
            example: session_token=<your-session-token>
      responses:
        '200':
          description: Platform profile data
          headers:
            Set-Cookie:
              description: Session token cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                _def:
                  unknownKeys: strip
                  catchall:
                    _def:
                      typeName: ZodNever
                    ~standard:
                      version: 1
                      vendor: zod
                  typeName: ZodObject
                  openapi:
                    _internal:
                      refId: PlatformProfile
                ~standard:
                  version: 1
                  vendor: zod
                _cached: null
              examples:
                productionAccess:
                  summary: Platform with crypto-to-fiat access
                  value:
                    hasCryptoToFiatProductionAccess: true
                noProductionAccess:
                  summary: Platform without crypto-to-fiat access
                  value:
                    hasCryptoToFiatProductionAccess: false
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      security:
        - session_token: []
      summary: Get current platform profile (Requires Session)
      tags:
        - Platform
        - V2/Platforms
  /v2/journey:
    post:
      description: Creates a new journeyRef (tracking ID) to trace the full lifecycle of a payment across multiple processors. This ID should be copied into the reference/memo field of all subsequent payment hops. Optionally, link the journey to an existing payment request.
      operationId: JourneyController_createJourney_v2
      parameters:
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                  description: The request ID of the request linked to the journey
            examples:
              withRequestId:
                summary: Link to an existing payment request
                value:
                  requestId: 01HXYZABCDEF1234567890QWERTYUIOP
              standalone:
                summary: Standalone journey (no request)
                value: {}
      responses:
        '201':
          description: Journey created successfully. Returns the unique journeyRef (tracking ID).
          content:
            application/json:
              examples:
                default:
                  summary: JourneyRef created
                  value:
                    journeyId: 01JOURNEYULID1234567890ABCDEF
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      summary: Create a new payment journey (tracking reference)
      tags:
        - V2/Journey
      x-feature-flag: journeyDisabled
  /v2/journey/{queryId}:
    post:
      description: Processors call this endpoint to report a new event (step) in a payment's journey. Each event represents a single hop (e.g., exchange, bridge, bank) and should include as much detail as possible. Events are automatically ordered by their processing time to build a full timeline. If a processor does not report, the timeline will simply show the steps that did report.
      operationId: JourneyController_createJourneyEvent_v2
      parameters:
        - name: queryId
          required: true
          in: path
          description: Either a journeyId (e.g., '01JOURNEYULID1234567890ABCDEF') or a txReference from an existing event in the journey (e.g., '0xabc123def456...'). The system will automatically determine which type is provided and locate the appropriate journey.
          schema:
            example: 01JOURNEYULID1234567890ABCDEF
            type: string
        - name: x-api-key
          in: header
          description: API key for authentication
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: The status of the journey event
                amount:
                  type: string
                  description: The amount of the journey event
                processedAt:
                  type: string
                  description: The date and time the journey event was processed, has to be in UTC format and end with 'Z' example `2025-07-23T14:23:00Z`
                currency:
                  type: string
                  description: The currency of the journey event
                txReference:
                  type: string
                  description: The transaction reference of the journey event
                rawPayload:
                  description: The raw payload of the journey event
                nextProcessorId:
                  type: string
                  description: The ID of the next processor in the journey
              required:
                - status
                - amount
                - processedAt
            examples:
              full:
                summary: Full event with transaction reference and details
                value:
                  status: COMPLETED
                  amount: '1000.00'
                  currency: USDT
                  txReference: 0xabc123def456...
                  processedAt: '2024-06-10T14:23:00Z'
                  rawPayload:
                    exchange: Binance
                    network: Ethereum
                    fee: '2.50'
                    note: Withdrawal to bridge
              minimal:
                summary: Minimal event (required fields only)
                value:
                  status: PENDING
                  amount: '500.00'
                  processedAt: '2024-06-10T13:00:00Z'
      responses:
        '201':
          description: Journey event created successfully. Returns the event details.
          content:
            application/json:
              examples:
                default:
                  summary: Event created
                  value:
                    id: 01EVENTULID1234567890ABCDEF
                    journeyId: 01JOURNEYULID1234567890ABCDEF
                    processorId: 01PROCESSORULID1234567890ABCDEF
                    status: COMPLETED
                    amount: '1000.00'
                    currency: USDT
                    txReference: 0xabc123def456...
                    processedAt: '2024-06-10T14:23:00Z'
                    rawPayload:
                      exchange: Binance
                      network: Ethereum
                      fee: '2.50'
                      note: Withdrawal to bridge
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
      summary: Report a payment event (step) for a journey
      tags:
        - V2/Journey
      x-feature-flag: journeyDisabled
  /v2/journey/{journeyId}:
    get:
      description: Returns the journey and all reported events (steps) for a given journeyRef (tracking ID), sorted by processing time. This provides a transparent, end-to-end timeline of the payment's path across all reporting processors.
      operationId: JourneyController_getJourney_v2
      parameters:
        - name: journeyId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Journey and its events retrieved successfully.
          content:
            application/json:
              examples:
                default:
                  summary: Journey with events
                  value:
                    id: 01JOURNEYULID1234567890ABCDEF
                    requestId: 01HXYZABCDEF1234567890QWERTYUIOP
                    createdAt: '2024-06-10T12:00:00Z'
                    events:
                      - id: 01EVENTULID1234567890ABCDEF
                        stepIndex: 1
                        status: PENDING
                        amount: '500.00'
                        currency: USDT
                        processedAt: '2024-06-10T13:00:00Z'
                      - id: 01EVENTULID1234567890ABCDEG
                        stepIndex: 2
                        status: COMPLETED
                        amount: '1000.00'
                        currency: USDT
                        txReference: 0xabc123def456...
                        processedAt: '2024-06-10T14:23:00Z'
                        rawPayload:
                          exchange: Binance
                          network: Ethereum
        '429':
          description: Too Many Requests
      summary: Get the full timeline for a payment journey
      tags:
        - V2/Journey
      x-feature-flag: journeyDisabled
info:
  title: Request Network API
  description: API for easily creating and paying Requests with Request Network.
  version: 0.8.1
  contact: {}
tags:
  - name: V1/Request
    description: Core payment request operations (V1)
  - name: V1/Pay
    description: Pay a request without creating one first (V1)
  - name: V1/Authentication
    description: Authentication operations (V1)
  - name: V1/API Keys
    description: API key management (V1)
  - name: V1/Currencies
    description: Currency operations (V1)
  - name: V1/Webhooks
    description: Webhook configuration (V1)
  - name: V2/Request
    description: Core payment request operations (V2)
  - name: V2/Payouts
    description: Pay a request without creating one first (V2)
  - name: V2/Payer
    description: Crypto-to-fiat payer management operations (V2)
  - name: V2/Authentication
    description: Authentication operations (V2)
  - name: V2/API Keys
    description: API key management (V2)
  - name: V2/Webhooks
    description: Webhook configuration (V2)
  - name: V2/Currencies
    description: Currency operations (V2)
  - name: V2/Platforms
    description: Platform operations (V2)
  - name: V2/Journey
    description: Journey operations (V2)
servers:
  - url: http://127.0.0.1:8080
    description: Local development server
  - url: https://api.request.network
    description: Production server
  - url: https://api.stage.request.network
    description: Staging server
components:
  schemas: {}
externalDocs:
  description: Request Network Docs
  url: https://docs.request.network/request-network-api
x-tagGroups:
  - name: V1
    tags:
      - V1/Request
      - V1/Pay
      - V1/Currencies
      - V1/Authentication
      - V1/API Keys
      - V1/Webhooks
    description: v1 endpoints
  - name: V2
    tags:
      - V2/Request
      - V2/Payouts
      - V2/Payer
      - V2/Currencies
      - V2/Authentication
      - V2/API Keys
      - V2/Webhooks
      - V2/Platforms
      - V2/Journey
    description: v2 endpoints
